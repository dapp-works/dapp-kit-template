schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_array_comparison_exp {
  """is the array contained in the given array value"""
  _contained_in: [String!]

  """does the array contain the given value"""
  _contains: [String!]
  _eq: [String!]
  _gt: [String!]
  _gte: [String!]
  _in: [[String!]!]
  _is_null: Boolean
  _lt: [String!]
  _lte: [String!]
  _neq: [String!]
  _nin: [[String!]!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

"""
columns and relationships of "app_img_cache_update"
"""
type app_img_cache_update {
  id: bigint!
  versionCode: Int!
}

"""
Boolean expression to filter rows from the table "app_img_cache_update". All fields are combined with a logical 'AND'.
"""
input app_img_cache_update_bool_exp {
  _and: [app_img_cache_update_bool_exp!]
  _not: app_img_cache_update_bool_exp
  _or: [app_img_cache_update_bool_exp!]
  id: bigint_comparison_exp
  versionCode: Int_comparison_exp
}

"""Ordering options when selecting data from "app_img_cache_update"."""
input app_img_cache_update_order_by {
  id: order_by
  versionCode: order_by
}

"""
select columns of table "app_img_cache_update"
"""
enum app_img_cache_update_select_column {
  """column name"""
  id

  """column name"""
  versionCode
}

"""
Streaming cursor of the table "app_img_cache_update"
"""
input app_img_cache_update_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: app_img_cache_update_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input app_img_cache_update_stream_cursor_value_input {
  id: bigint
  versionCode: Int
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""buy_iotex"""
type buy_iotex {
  content: String!
  content_cn: String!
  enabled: Boolean!
  icon: String
  id: Int!
  ios_available: Boolean!
  link: String!
  third_party: Boolean!
  title: String!
  type: Int!
  type_icon_name: String
}

"""
Boolean expression to filter rows from the table "buy_iotex". All fields are combined with a logical 'AND'.
"""
input buy_iotex_bool_exp {
  _and: [buy_iotex_bool_exp!]
  _not: buy_iotex_bool_exp
  _or: [buy_iotex_bool_exp!]
  content: String_comparison_exp
  content_cn: String_comparison_exp
  enabled: Boolean_comparison_exp
  icon: String_comparison_exp
  id: Int_comparison_exp
  ios_available: Boolean_comparison_exp
  link: String_comparison_exp
  third_party: Boolean_comparison_exp
  title: String_comparison_exp
  type: Int_comparison_exp
  type_icon_name: String_comparison_exp
}

"""Ordering options when selecting data from "buy_iotex"."""
input buy_iotex_order_by {
  content: order_by
  content_cn: order_by
  enabled: order_by
  icon: order_by
  id: order_by
  ios_available: order_by
  link: order_by
  third_party: order_by
  title: order_by
  type: order_by
  type_icon_name: order_by
}

"""
select columns of table "buy_iotex"
"""
enum buy_iotex_select_column {
  """column name"""
  content

  """column name"""
  content_cn

  """column name"""
  enabled

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  ios_available

  """column name"""
  link

  """column name"""
  third_party

  """column name"""
  title

  """column name"""
  type

  """column name"""
  type_icon_name
}

"""
Streaming cursor of the table "buy_iotex"
"""
input buy_iotex_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: buy_iotex_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input buy_iotex_stream_cursor_value_input {
  content: String
  content_cn: String
  enabled: Boolean
  icon: String
  id: Int
  ios_available: Boolean
  link: String
  third_party: Boolean
  title: String
  type: Int
  type_icon_name: String
}

"""
columns and relationships of "campaign_labels"
"""
type campaign_labels {
  color: String!
  id: Int!
  name: String!
}

"""
order by aggregate values of table "campaign_labels"
"""
input campaign_labels_aggregate_order_by {
  avg: campaign_labels_avg_order_by
  count: order_by
  max: campaign_labels_max_order_by
  min: campaign_labels_min_order_by
  stddev: campaign_labels_stddev_order_by
  stddev_pop: campaign_labels_stddev_pop_order_by
  stddev_samp: campaign_labels_stddev_samp_order_by
  sum: campaign_labels_sum_order_by
  var_pop: campaign_labels_var_pop_order_by
  var_samp: campaign_labels_var_samp_order_by
  variance: campaign_labels_variance_order_by
}

"""
order by avg() on columns of table "campaign_labels"
"""
input campaign_labels_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "campaign_labels". All fields are combined with a logical 'AND'.
"""
input campaign_labels_bool_exp {
  _and: [campaign_labels_bool_exp!]
  _not: campaign_labels_bool_exp
  _or: [campaign_labels_bool_exp!]
  color: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
}

"""
order by max() on columns of table "campaign_labels"
"""
input campaign_labels_max_order_by {
  color: order_by
  id: order_by
  name: order_by
}

"""
order by min() on columns of table "campaign_labels"
"""
input campaign_labels_min_order_by {
  color: order_by
  id: order_by
  name: order_by
}

"""Ordering options when selecting data from "campaign_labels"."""
input campaign_labels_order_by {
  color: order_by
  id: order_by
  name: order_by
}

"""
select columns of table "campaign_labels"
"""
enum campaign_labels_select_column {
  """column name"""
  color

  """column name"""
  id

  """column name"""
  name
}

"""
order by stddev() on columns of table "campaign_labels"
"""
input campaign_labels_stddev_order_by {
  id: order_by
}

"""
order by stddev_pop() on columns of table "campaign_labels"
"""
input campaign_labels_stddev_pop_order_by {
  id: order_by
}

"""
order by stddev_samp() on columns of table "campaign_labels"
"""
input campaign_labels_stddev_samp_order_by {
  id: order_by
}

"""
Streaming cursor of the table "campaign_labels"
"""
input campaign_labels_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: campaign_labels_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input campaign_labels_stream_cursor_value_input {
  color: String
  id: Int
  name: String
}

"""
order by sum() on columns of table "campaign_labels"
"""
input campaign_labels_sum_order_by {
  id: order_by
}

"""
order by var_pop() on columns of table "campaign_labels"
"""
input campaign_labels_var_pop_order_by {
  id: order_by
}

"""
order by var_samp() on columns of table "campaign_labels"
"""
input campaign_labels_var_samp_order_by {
  id: order_by
}

"""
order by variance() on columns of table "campaign_labels"
"""
input campaign_labels_variance_order_by {
  id: order_by
}

"""
columns and relationships of "campaign_list"
"""
type campaign_list {
  active: Boolean!

  """
  A computed field, executes function "campaign_labels"
  """
  c_labels(
    """distinct select on columns"""
    distinct_on: [campaign_labels_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [campaign_labels_order_by!]

    """filter the rows returned"""
    where: campaign_labels_bool_exp
  ): [campaign_labels!]
  created_at: timestamp!
  description: String!
  end_at: timestamp
  id: Int!
  img_url: String
  labels: String
  link: String!
  order_index: Int
  port3: Boolean!
  start_at: timestamp!
  title: String!
  updated_at: timestamptz!
}

"""
Boolean expression to filter rows from the table "campaign_list". All fields are combined with a logical 'AND'.
"""
input campaign_list_bool_exp {
  _and: [campaign_list_bool_exp!]
  _not: campaign_list_bool_exp
  _or: [campaign_list_bool_exp!]
  active: Boolean_comparison_exp
  c_labels: campaign_labels_bool_exp
  created_at: timestamp_comparison_exp
  description: String_comparison_exp
  end_at: timestamp_comparison_exp
  id: Int_comparison_exp
  img_url: String_comparison_exp
  labels: String_comparison_exp
  link: String_comparison_exp
  order_index: Int_comparison_exp
  port3: Boolean_comparison_exp
  start_at: timestamp_comparison_exp
  title: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""Ordering options when selecting data from "campaign_list"."""
input campaign_list_order_by {
  active: order_by
  c_labels_aggregate: campaign_labels_aggregate_order_by
  created_at: order_by
  description: order_by
  end_at: order_by
  id: order_by
  img_url: order_by
  labels: order_by
  link: order_by
  order_index: order_by
  port3: order_by
  start_at: order_by
  title: order_by
  updated_at: order_by
}

"""
select columns of table "campaign_list"
"""
enum campaign_list_select_column {
  """column name"""
  active

  """column name"""
  created_at

  """column name"""
  description

  """column name"""
  end_at

  """column name"""
  id

  """column name"""
  img_url

  """column name"""
  labels

  """column name"""
  link

  """column name"""
  order_index

  """column name"""
  port3

  """column name"""
  start_at

  """column name"""
  title

  """column name"""
  updated_at
}

"""
Streaming cursor of the table "campaign_list"
"""
input campaign_list_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: campaign_list_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input campaign_list_stream_cursor_value_input {
  active: Boolean
  created_at: timestamp
  description: String
  end_at: timestamp
  id: Int
  img_url: String
  labels: String
  link: String
  order_index: Int
  port3: Boolean
  start_at: timestamp
  title: String
  updated_at: timestamptz
}

"""
columns and relationships of "certified_contract"
"""
type certified_contract {
  contract: String!
  id: Int!
  name: String!
  option: String
}

"""
Boolean expression to filter rows from the table "certified_contract". All fields are combined with a logical 'AND'.
"""
input certified_contract_bool_exp {
  _and: [certified_contract_bool_exp!]
  _not: certified_contract_bool_exp
  _or: [certified_contract_bool_exp!]
  contract: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  option: String_comparison_exp
}

"""Ordering options when selecting data from "certified_contract"."""
input certified_contract_order_by {
  contract: order_by
  id: order_by
  name: order_by
  option: order_by
}

"""
select columns of table "certified_contract"
"""
enum certified_contract_select_column {
  """column name"""
  contract

  """column name"""
  id

  """column name"""
  name

  """column name"""
  option
}

"""
Streaming cursor of the table "certified_contract"
"""
input certified_contract_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: certified_contract_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input certified_contract_stream_cursor_value_input {
  contract: String
  id: Int
  name: String
  option: String
}

"""
columns and relationships of "coingecko_coin_detail"
"""
type coingecko_coin_detail {
  data(
    """JSON select path"""
    path: String
  ): jsonb
  id: String!
  website: String
}

"""
Boolean expression to filter rows from the table "coingecko_coin_detail". All fields are combined with a logical 'AND'.
"""
input coingecko_coin_detail_bool_exp {
  _and: [coingecko_coin_detail_bool_exp!]
  _not: coingecko_coin_detail_bool_exp
  _or: [coingecko_coin_detail_bool_exp!]
  data: jsonb_comparison_exp
  id: String_comparison_exp
  website: String_comparison_exp
}

"""Ordering options when selecting data from "coingecko_coin_detail"."""
input coingecko_coin_detail_order_by {
  data: order_by
  id: order_by
  website: order_by
}

"""
select columns of table "coingecko_coin_detail"
"""
enum coingecko_coin_detail_select_column {
  """column name"""
  data

  """column name"""
  id

  """column name"""
  website
}

"""
Streaming cursor of the table "coingecko_coin_detail"
"""
input coingecko_coin_detail_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: coingecko_coin_detail_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input coingecko_coin_detail_stream_cursor_value_input {
  data: jsonb
  id: String
  website: String
}

"""
columns and relationships of "coingeko_market"
"""
type coingeko_market {
  ath: numeric
  ath_change_percentage: numeric
  ath_date: String
  atl: numeric
  atl_change_percentage: numeric
  atl_date: String
  circulating_supply: numeric
  current_price: numeric
  fully_diluted_valuation: String
  high_24h: numeric
  id: String!
  image: String
  last_updated: String
  low_24h: numeric
  market_cap: numeric
  market_cap_change_24h: numeric
  market_cap_change_percentage_24h: numeric
  market_cap_rank: String
  max_supply: String
  name: String
  price_change_24h: numeric
  price_change_percentage_24h: numeric
  roi: String
  sparkline_in_7d(
    """JSON select path"""
    path: String
  ): jsonb
  symbol: String

  """An object relationship"""
  token: token_list_v2
  total_supply: numeric
  total_volume: numeric
}

"""
Boolean expression to filter rows from the table "coingeko_market". All fields are combined with a logical 'AND'.
"""
input coingeko_market_bool_exp {
  _and: [coingeko_market_bool_exp!]
  _not: coingeko_market_bool_exp
  _or: [coingeko_market_bool_exp!]
  ath: numeric_comparison_exp
  ath_change_percentage: numeric_comparison_exp
  ath_date: String_comparison_exp
  atl: numeric_comparison_exp
  atl_change_percentage: numeric_comparison_exp
  atl_date: String_comparison_exp
  circulating_supply: numeric_comparison_exp
  current_price: numeric_comparison_exp
  fully_diluted_valuation: String_comparison_exp
  high_24h: numeric_comparison_exp
  id: String_comparison_exp
  image: String_comparison_exp
  last_updated: String_comparison_exp
  low_24h: numeric_comparison_exp
  market_cap: numeric_comparison_exp
  market_cap_change_24h: numeric_comparison_exp
  market_cap_change_percentage_24h: numeric_comparison_exp
  market_cap_rank: String_comparison_exp
  max_supply: String_comparison_exp
  name: String_comparison_exp
  price_change_24h: numeric_comparison_exp
  price_change_percentage_24h: numeric_comparison_exp
  roi: String_comparison_exp
  sparkline_in_7d: jsonb_comparison_exp
  symbol: String_comparison_exp
  token: token_list_v2_bool_exp
  total_supply: numeric_comparison_exp
  total_volume: numeric_comparison_exp
}

"""Ordering options when selecting data from "coingeko_market"."""
input coingeko_market_order_by {
  ath: order_by
  ath_change_percentage: order_by
  ath_date: order_by
  atl: order_by
  atl_change_percentage: order_by
  atl_date: order_by
  circulating_supply: order_by
  current_price: order_by
  fully_diluted_valuation: order_by
  high_24h: order_by
  id: order_by
  image: order_by
  last_updated: order_by
  low_24h: order_by
  market_cap: order_by
  market_cap_change_24h: order_by
  market_cap_change_percentage_24h: order_by
  market_cap_rank: order_by
  max_supply: order_by
  name: order_by
  price_change_24h: order_by
  price_change_percentage_24h: order_by
  roi: order_by
  sparkline_in_7d: order_by
  symbol: order_by
  token: token_list_v2_order_by
  total_supply: order_by
  total_volume: order_by
}

"""
select columns of table "coingeko_market"
"""
enum coingeko_market_select_column {
  """column name"""
  ath

  """column name"""
  ath_change_percentage

  """column name"""
  ath_date

  """column name"""
  atl

  """column name"""
  atl_change_percentage

  """column name"""
  atl_date

  """column name"""
  circulating_supply

  """column name"""
  current_price

  """column name"""
  fully_diluted_valuation

  """column name"""
  high_24h

  """column name"""
  id

  """column name"""
  image

  """column name"""
  last_updated

  """column name"""
  low_24h

  """column name"""
  market_cap

  """column name"""
  market_cap_change_24h

  """column name"""
  market_cap_change_percentage_24h

  """column name"""
  market_cap_rank

  """column name"""
  max_supply

  """column name"""
  name

  """column name"""
  price_change_24h

  """column name"""
  price_change_percentage_24h

  """column name"""
  roi

  """column name"""
  sparkline_in_7d

  """column name"""
  symbol

  """column name"""
  total_supply

  """column name"""
  total_volume
}

"""
Streaming cursor of the table "coingeko_market"
"""
input coingeko_market_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: coingeko_market_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input coingeko_market_stream_cursor_value_input {
  ath: numeric
  ath_change_percentage: numeric
  ath_date: String
  atl: numeric
  atl_change_percentage: numeric
  atl_date: String
  circulating_supply: numeric
  current_price: numeric
  fully_diluted_valuation: String
  high_24h: numeric
  id: String
  image: String
  last_updated: String
  low_24h: numeric
  market_cap: numeric
  market_cap_change_24h: numeric
  market_cap_change_percentage_24h: numeric
  market_cap_rank: String
  max_supply: String
  name: String
  price_change_24h: numeric
  price_change_percentage_24h: numeric
  roi: String
  sparkline_in_7d: jsonb
  symbol: String
  total_supply: numeric
  total_volume: numeric
}

"""
columns and relationships of "contract_error_msg"
"""
type contract_error_msg {
  discription: String
  error: String!
  id: Int!
  msg: String
  msg_cn: String
}

"""
Boolean expression to filter rows from the table "contract_error_msg". All fields are combined with a logical 'AND'.
"""
input contract_error_msg_bool_exp {
  _and: [contract_error_msg_bool_exp!]
  _not: contract_error_msg_bool_exp
  _or: [contract_error_msg_bool_exp!]
  discription: String_comparison_exp
  error: String_comparison_exp
  id: Int_comparison_exp
  msg: String_comparison_exp
  msg_cn: String_comparison_exp
}

"""Ordering options when selecting data from "contract_error_msg"."""
input contract_error_msg_order_by {
  discription: order_by
  error: order_by
  id: order_by
  msg: order_by
  msg_cn: order_by
}

"""
select columns of table "contract_error_msg"
"""
enum contract_error_msg_select_column {
  """column name"""
  discription

  """column name"""
  error

  """column name"""
  id

  """column name"""
  msg

  """column name"""
  msg_cn
}

"""
Streaming cursor of the table "contract_error_msg"
"""
input contract_error_msg_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: contract_error_msg_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input contract_error_msg_stream_cursor_value_input {
  discription: String
  error: String
  id: Int
  msg: String
  msg_cn: String
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

"""
columns and relationships of "dapp_category"
"""
type dapp_category {
  """An object relationship"""
  category_banner: dapp_category_banner
  hot: Boolean
  id: bigint!
  name: String!
  order: Int!
}

"""
columns and relationships of "dapp_category_banner"
"""
type dapp_category_banner {
  image: String
  link: String!
  name: String
}

"""
Boolean expression to filter rows from the table "dapp_category_banner". All fields are combined with a logical 'AND'.
"""
input dapp_category_banner_bool_exp {
  _and: [dapp_category_banner_bool_exp!]
  _not: dapp_category_banner_bool_exp
  _or: [dapp_category_banner_bool_exp!]
  image: String_comparison_exp
  link: String_comparison_exp
  name: String_comparison_exp
}

"""Ordering options when selecting data from "dapp_category_banner"."""
input dapp_category_banner_order_by {
  image: order_by
  link: order_by
  name: order_by
}

"""
select columns of table "dapp_category_banner"
"""
enum dapp_category_banner_select_column {
  """column name"""
  image

  """column name"""
  link

  """column name"""
  name
}

"""
Streaming cursor of the table "dapp_category_banner"
"""
input dapp_category_banner_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dapp_category_banner_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dapp_category_banner_stream_cursor_value_input {
  image: String
  link: String
  name: String
}

"""
Boolean expression to filter rows from the table "dapp_category". All fields are combined with a logical 'AND'.
"""
input dapp_category_bool_exp {
  _and: [dapp_category_bool_exp!]
  _not: dapp_category_bool_exp
  _or: [dapp_category_bool_exp!]
  category_banner: dapp_category_banner_bool_exp
  hot: Boolean_comparison_exp
  id: bigint_comparison_exp
  name: String_comparison_exp
  order: Int_comparison_exp
}

"""Ordering options when selecting data from "dapp_category"."""
input dapp_category_order_by {
  category_banner: dapp_category_banner_order_by
  hot: order_by
  id: order_by
  name: order_by
  order: order_by
}

"""
select columns of table "dapp_category"
"""
enum dapp_category_select_column {
  """column name"""
  hot

  """column name"""
  id

  """column name"""
  name

  """column name"""
  order
}

"""
Streaming cursor of the table "dapp_category"
"""
input dapp_category_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dapp_category_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dapp_category_stream_cursor_value_input {
  hot: Boolean
  id: bigint
  name: String
  order: Int
}

"""
columns and relationships of "dapp_list"
"""
type dapp_list {
  category: String
  chains: String
  content: String
  contentCN: String
  id: String!
  imgUrl: String
  named: Boolean
  title: String
  url: String
  weight: numeric
}

"""
Boolean expression to filter rows from the table "dapp_list". All fields are combined with a logical 'AND'.
"""
input dapp_list_bool_exp {
  _and: [dapp_list_bool_exp!]
  _not: dapp_list_bool_exp
  _or: [dapp_list_bool_exp!]
  category: String_comparison_exp
  chains: String_comparison_exp
  content: String_comparison_exp
  contentCN: String_comparison_exp
  id: String_comparison_exp
  imgUrl: String_comparison_exp
  named: Boolean_comparison_exp
  title: String_comparison_exp
  url: String_comparison_exp
  weight: numeric_comparison_exp
}

"""
columns and relationships of "dapp_list_latest"
"""
type dapp_list_latest {
  chains: String
  content: String
  content_cn: String
  id: Int!
  img_url: String
  popularity: String
  source_priority: Int!
  tags: String
  title: String
  url: String
  weight: Int
}

"""
order by aggregate values of table "dapp_list_latest"
"""
input dapp_list_latest_aggregate_order_by {
  avg: dapp_list_latest_avg_order_by
  count: order_by
  max: dapp_list_latest_max_order_by
  min: dapp_list_latest_min_order_by
  stddev: dapp_list_latest_stddev_order_by
  stddev_pop: dapp_list_latest_stddev_pop_order_by
  stddev_samp: dapp_list_latest_stddev_samp_order_by
  sum: dapp_list_latest_sum_order_by
  var_pop: dapp_list_latest_var_pop_order_by
  var_samp: dapp_list_latest_var_samp_order_by
  variance: dapp_list_latest_variance_order_by
}

"""
order by avg() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_avg_order_by {
  id: order_by
  source_priority: order_by
  weight: order_by
}

"""
Boolean expression to filter rows from the table "dapp_list_latest". All fields are combined with a logical 'AND'.
"""
input dapp_list_latest_bool_exp {
  _and: [dapp_list_latest_bool_exp!]
  _not: dapp_list_latest_bool_exp
  _or: [dapp_list_latest_bool_exp!]
  chains: String_comparison_exp
  content: String_comparison_exp
  content_cn: String_comparison_exp
  id: Int_comparison_exp
  img_url: String_comparison_exp
  popularity: String_comparison_exp
  source_priority: Int_comparison_exp
  tags: String_comparison_exp
  title: String_comparison_exp
  url: String_comparison_exp
  weight: Int_comparison_exp
}

"""
order by max() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_max_order_by {
  chains: order_by
  content: order_by
  content_cn: order_by
  id: order_by
  img_url: order_by
  popularity: order_by
  source_priority: order_by
  tags: order_by
  title: order_by
  url: order_by
  weight: order_by
}

"""
order by min() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_min_order_by {
  chains: order_by
  content: order_by
  content_cn: order_by
  id: order_by
  img_url: order_by
  popularity: order_by
  source_priority: order_by
  tags: order_by
  title: order_by
  url: order_by
  weight: order_by
}

"""Ordering options when selecting data from "dapp_list_latest"."""
input dapp_list_latest_order_by {
  chains: order_by
  content: order_by
  content_cn: order_by
  id: order_by
  img_url: order_by
  popularity: order_by
  source_priority: order_by
  tags: order_by
  title: order_by
  url: order_by
  weight: order_by
}

"""
select columns of table "dapp_list_latest"
"""
enum dapp_list_latest_select_column {
  """column name"""
  chains

  """column name"""
  content

  """column name"""
  content_cn

  """column name"""
  id

  """column name"""
  img_url

  """column name"""
  popularity

  """column name"""
  source_priority

  """column name"""
  tags

  """column name"""
  title

  """column name"""
  url

  """column name"""
  weight
}

"""
order by stddev() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_stddev_order_by {
  id: order_by
  source_priority: order_by
  weight: order_by
}

"""
order by stddev_pop() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_stddev_pop_order_by {
  id: order_by
  source_priority: order_by
  weight: order_by
}

"""
order by stddev_samp() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_stddev_samp_order_by {
  id: order_by
  source_priority: order_by
  weight: order_by
}

"""
Streaming cursor of the table "dapp_list_latest"
"""
input dapp_list_latest_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dapp_list_latest_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dapp_list_latest_stream_cursor_value_input {
  chains: String
  content: String
  content_cn: String
  id: Int
  img_url: String
  popularity: String
  source_priority: Int
  tags: String
  title: String
  url: String
  weight: Int
}

"""
order by sum() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_sum_order_by {
  id: order_by
  source_priority: order_by
  weight: order_by
}

"""
columns and relationships of "dapp_list_latest_v2"
"""
type dapp_list_latest_v2 {
  chains: String
  content: String
  content_cn: String
  id: Int!
  img_url: String
  is_updated: Boolean
  popularity: String
  source_priority: Int
  tags: String
  title: String
  url: String
  weight: Int
}

"""
aggregated selection of "dapp_list_latest_v2"
"""
type dapp_list_latest_v2_aggregate {
  aggregate: dapp_list_latest_v2_aggregate_fields
  nodes: [dapp_list_latest_v2!]!
}

"""
aggregate fields of "dapp_list_latest_v2"
"""
type dapp_list_latest_v2_aggregate_fields {
  avg: dapp_list_latest_v2_avg_fields
  count(columns: [dapp_list_latest_v2_select_column!], distinct: Boolean): Int!
  max: dapp_list_latest_v2_max_fields
  min: dapp_list_latest_v2_min_fields
  stddev: dapp_list_latest_v2_stddev_fields
  stddev_pop: dapp_list_latest_v2_stddev_pop_fields
  stddev_samp: dapp_list_latest_v2_stddev_samp_fields
  sum: dapp_list_latest_v2_sum_fields
  var_pop: dapp_list_latest_v2_var_pop_fields
  var_samp: dapp_list_latest_v2_var_samp_fields
  variance: dapp_list_latest_v2_variance_fields
}

"""aggregate avg on columns"""
type dapp_list_latest_v2_avg_fields {
  id: Float
  source_priority: Float
  weight: Float
}

"""
Boolean expression to filter rows from the table "dapp_list_latest_v2". All fields are combined with a logical 'AND'.
"""
input dapp_list_latest_v2_bool_exp {
  _and: [dapp_list_latest_v2_bool_exp!]
  _not: dapp_list_latest_v2_bool_exp
  _or: [dapp_list_latest_v2_bool_exp!]
  chains: String_comparison_exp
  content: String_comparison_exp
  content_cn: String_comparison_exp
  id: Int_comparison_exp
  img_url: String_comparison_exp
  is_updated: Boolean_comparison_exp
  popularity: String_comparison_exp
  source_priority: Int_comparison_exp
  tags: String_comparison_exp
  title: String_comparison_exp
  url: String_comparison_exp
  weight: Int_comparison_exp
}

"""aggregate max on columns"""
type dapp_list_latest_v2_max_fields {
  chains: String
  content: String
  content_cn: String
  id: Int
  img_url: String
  popularity: String
  source_priority: Int
  tags: String
  title: String
  url: String
  weight: Int
}

"""aggregate min on columns"""
type dapp_list_latest_v2_min_fields {
  chains: String
  content: String
  content_cn: String
  id: Int
  img_url: String
  popularity: String
  source_priority: Int
  tags: String
  title: String
  url: String
  weight: Int
}

"""Ordering options when selecting data from "dapp_list_latest_v2"."""
input dapp_list_latest_v2_order_by {
  chains: order_by
  content: order_by
  content_cn: order_by
  id: order_by
  img_url: order_by
  is_updated: order_by
  popularity: order_by
  source_priority: order_by
  tags: order_by
  title: order_by
  url: order_by
  weight: order_by
}

"""
select columns of table "dapp_list_latest_v2"
"""
enum dapp_list_latest_v2_select_column {
  """column name"""
  chains

  """column name"""
  content

  """column name"""
  content_cn

  """column name"""
  id

  """column name"""
  img_url

  """column name"""
  is_updated

  """column name"""
  popularity

  """column name"""
  source_priority

  """column name"""
  tags

  """column name"""
  title

  """column name"""
  url

  """column name"""
  weight
}

"""aggregate stddev on columns"""
type dapp_list_latest_v2_stddev_fields {
  id: Float
  source_priority: Float
  weight: Float
}

"""aggregate stddev_pop on columns"""
type dapp_list_latest_v2_stddev_pop_fields {
  id: Float
  source_priority: Float
  weight: Float
}

"""aggregate stddev_samp on columns"""
type dapp_list_latest_v2_stddev_samp_fields {
  id: Float
  source_priority: Float
  weight: Float
}

"""
Streaming cursor of the table "dapp_list_latest_v2"
"""
input dapp_list_latest_v2_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dapp_list_latest_v2_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dapp_list_latest_v2_stream_cursor_value_input {
  chains: String
  content: String
  content_cn: String
  id: Int
  img_url: String
  is_updated: Boolean
  popularity: String
  source_priority: Int
  tags: String
  title: String
  url: String
  weight: Int
}

"""aggregate sum on columns"""
type dapp_list_latest_v2_sum_fields {
  id: Int
  source_priority: Int
  weight: Int
}

"""aggregate var_pop on columns"""
type dapp_list_latest_v2_var_pop_fields {
  id: Float
  source_priority: Float
  weight: Float
}

"""aggregate var_samp on columns"""
type dapp_list_latest_v2_var_samp_fields {
  id: Float
  source_priority: Float
  weight: Float
}

"""aggregate variance on columns"""
type dapp_list_latest_v2_variance_fields {
  id: Float
  source_priority: Float
  weight: Float
}

"""
order by var_pop() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_var_pop_order_by {
  id: order_by
  source_priority: order_by
  weight: order_by
}

"""
order by var_samp() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_var_samp_order_by {
  id: order_by
  source_priority: order_by
  weight: order_by
}

"""
order by variance() on columns of table "dapp_list_latest"
"""
input dapp_list_latest_variance_order_by {
  id: order_by
  source_priority: order_by
  weight: order_by
}

"""Ordering options when selecting data from "dapp_list"."""
input dapp_list_order_by {
  category: order_by
  chains: order_by
  content: order_by
  contentCN: order_by
  id: order_by
  imgUrl: order_by
  named: order_by
  title: order_by
  url: order_by
  weight: order_by
}

"""
select columns of table "dapp_list"
"""
enum dapp_list_select_column {
  """column name"""
  category

  """column name"""
  chains

  """column name"""
  content

  """column name"""
  contentCN

  """column name"""
  id

  """column name"""
  imgUrl

  """column name"""
  named

  """column name"""
  title

  """column name"""
  url

  """column name"""
  weight
}

"""
Streaming cursor of the table "dapp_list"
"""
input dapp_list_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dapp_list_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dapp_list_stream_cursor_value_input {
  category: String
  chains: String
  content: String
  contentCN: String
  id: String
  imgUrl: String
  named: Boolean
  title: String
  url: String
  weight: numeric
}

"""
columns and relationships of "dapp_list_v3"
"""
type dapp_list_v3 {
  chains: String
  content: String
  content_cn: String
  id: String!
  img_url: String
  tags: String
  title: String
  url: String
  weight: Int
}

"""
Boolean expression to filter rows from the table "dapp_list_v3". All fields are combined with a logical 'AND'.
"""
input dapp_list_v3_bool_exp {
  _and: [dapp_list_v3_bool_exp!]
  _not: dapp_list_v3_bool_exp
  _or: [dapp_list_v3_bool_exp!]
  chains: String_comparison_exp
  content: String_comparison_exp
  content_cn: String_comparison_exp
  id: String_comparison_exp
  img_url: String_comparison_exp
  tags: String_comparison_exp
  title: String_comparison_exp
  url: String_comparison_exp
  weight: Int_comparison_exp
}

"""Ordering options when selecting data from "dapp_list_v3"."""
input dapp_list_v3_order_by {
  chains: order_by
  content: order_by
  content_cn: order_by
  id: order_by
  img_url: order_by
  tags: order_by
  title: order_by
  url: order_by
  weight: order_by
}

"""
select columns of table "dapp_list_v3"
"""
enum dapp_list_v3_select_column {
  """column name"""
  chains

  """column name"""
  content

  """column name"""
  content_cn

  """column name"""
  id

  """column name"""
  img_url

  """column name"""
  tags

  """column name"""
  title

  """column name"""
  url

  """column name"""
  weight
}

"""
Streaming cursor of the table "dapp_list_v3"
"""
input dapp_list_v3_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dapp_list_v3_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dapp_list_v3_stream_cursor_value_input {
  chains: String
  content: String
  content_cn: String
  id: String
  img_url: String
  tags: String
  title: String
  url: String
  weight: Int
}

"""
columns and relationships of "dapp_list_v4"
"""
type dapp_list_v4 {
  chains: String
  content: String
  content_cn: String
  id: String!
  img_url: String
  tags: String
  title: String
  tvl: numeric
  url: String
  weight: Int
}

"""
Boolean expression to filter rows from the table "dapp_list_v4". All fields are combined with a logical 'AND'.
"""
input dapp_list_v4_bool_exp {
  _and: [dapp_list_v4_bool_exp!]
  _not: dapp_list_v4_bool_exp
  _or: [dapp_list_v4_bool_exp!]
  chains: String_comparison_exp
  content: String_comparison_exp
  content_cn: String_comparison_exp
  id: String_comparison_exp
  img_url: String_comparison_exp
  tags: String_comparison_exp
  title: String_comparison_exp
  tvl: numeric_comparison_exp
  url: String_comparison_exp
  weight: Int_comparison_exp
}

"""Ordering options when selecting data from "dapp_list_v4"."""
input dapp_list_v4_order_by {
  chains: order_by
  content: order_by
  content_cn: order_by
  id: order_by
  img_url: order_by
  tags: order_by
  title: order_by
  tvl: order_by
  url: order_by
  weight: order_by
}

"""
select columns of table "dapp_list_v4"
"""
enum dapp_list_v4_select_column {
  """column name"""
  chains

  """column name"""
  content

  """column name"""
  content_cn

  """column name"""
  id

  """column name"""
  img_url

  """column name"""
  tags

  """column name"""
  title

  """column name"""
  tvl

  """column name"""
  url

  """column name"""
  weight
}

"""
Streaming cursor of the table "dapp_list_v4"
"""
input dapp_list_v4_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dapp_list_v4_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dapp_list_v4_stream_cursor_value_input {
  chains: String
  content: String
  content_cn: String
  id: String
  img_url: String
  tags: String
  title: String
  tvl: numeric
  url: String
  weight: Int
}

"""
columns and relationships of "dapp_list_v5"
"""
type dapp_list_v5 {
  chains: String
  content: String
  content_cn: String
  id: String!
  img_url: String
  tags: String
  title: String
  tvl: numeric
  update_time: timestamptz
  url: String
  weight: Int
}

"""
Boolean expression to filter rows from the table "dapp_list_v5". All fields are combined with a logical 'AND'.
"""
input dapp_list_v5_bool_exp {
  _and: [dapp_list_v5_bool_exp!]
  _not: dapp_list_v5_bool_exp
  _or: [dapp_list_v5_bool_exp!]
  chains: String_comparison_exp
  content: String_comparison_exp
  content_cn: String_comparison_exp
  id: String_comparison_exp
  img_url: String_comparison_exp
  tags: String_comparison_exp
  title: String_comparison_exp
  tvl: numeric_comparison_exp
  update_time: timestamptz_comparison_exp
  url: String_comparison_exp
  weight: Int_comparison_exp
}

"""Ordering options when selecting data from "dapp_list_v5"."""
input dapp_list_v5_order_by {
  chains: order_by
  content: order_by
  content_cn: order_by
  id: order_by
  img_url: order_by
  tags: order_by
  title: order_by
  tvl: order_by
  update_time: order_by
  url: order_by
  weight: order_by
}

"""
select columns of table "dapp_list_v5"
"""
enum dapp_list_v5_select_column {
  """column name"""
  chains

  """column name"""
  content

  """column name"""
  content_cn

  """column name"""
  id

  """column name"""
  img_url

  """column name"""
  tags

  """column name"""
  title

  """column name"""
  tvl

  """column name"""
  update_time

  """column name"""
  url

  """column name"""
  weight
}

"""
Streaming cursor of the table "dapp_list_v5"
"""
input dapp_list_v5_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dapp_list_v5_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dapp_list_v5_stream_cursor_value_input {
  chains: String
  content: String
  content_cn: String
  id: String
  img_url: String
  tags: String
  title: String
  tvl: numeric
  update_time: timestamptz
  url: String
  weight: Int
}

"""
columns and relationships of "dapp_promote"
"""
type dapp_promote {
  chain: String!
  id: String!
  img_url: String!
  promote: Int!
  promote_content: String!
  promote_content_cn: String!
  title: String!
  token(
    """JSON select path"""
    path: String
  ): jsonb
  url: String!
}

"""
Boolean expression to filter rows from the table "dapp_promote". All fields are combined with a logical 'AND'.
"""
input dapp_promote_bool_exp {
  _and: [dapp_promote_bool_exp!]
  _not: dapp_promote_bool_exp
  _or: [dapp_promote_bool_exp!]
  chain: String_comparison_exp
  id: String_comparison_exp
  img_url: String_comparison_exp
  promote: Int_comparison_exp
  promote_content: String_comparison_exp
  promote_content_cn: String_comparison_exp
  title: String_comparison_exp
  token: jsonb_comparison_exp
  url: String_comparison_exp
}

"""Ordering options when selecting data from "dapp_promote"."""
input dapp_promote_order_by {
  chain: order_by
  id: order_by
  img_url: order_by
  promote: order_by
  promote_content: order_by
  promote_content_cn: order_by
  title: order_by
  token: order_by
  url: order_by
}

"""
select columns of table "dapp_promote"
"""
enum dapp_promote_select_column {
  """column name"""
  chain

  """column name"""
  id

  """column name"""
  img_url

  """column name"""
  promote

  """column name"""
  promote_content

  """column name"""
  promote_content_cn

  """column name"""
  title

  """column name"""
  token

  """column name"""
  url
}

"""
Streaming cursor of the table "dapp_promote"
"""
input dapp_promote_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dapp_promote_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dapp_promote_stream_cursor_value_input {
  chain: String
  id: String
  img_url: String
  promote: Int
  promote_content: String
  promote_content_cn: String
  title: String
  token: jsonb
  url: String
}

"""
columns and relationships of "discovery_banner"
"""
type discovery_banner {
  area: String
  created_at: timestamptz!
  expiration_at: timestamptz
  id: Int!
  imgUrl: String!
  order: Int!
  type: String
  url: String!
}

"""
Boolean expression to filter rows from the table "discovery_banner". All fields are combined with a logical 'AND'.
"""
input discovery_banner_bool_exp {
  _and: [discovery_banner_bool_exp!]
  _not: discovery_banner_bool_exp
  _or: [discovery_banner_bool_exp!]
  area: String_comparison_exp
  created_at: timestamptz_comparison_exp
  expiration_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  imgUrl: String_comparison_exp
  order: Int_comparison_exp
  type: String_comparison_exp
  url: String_comparison_exp
}

"""Ordering options when selecting data from "discovery_banner"."""
input discovery_banner_order_by {
  area: order_by
  created_at: order_by
  expiration_at: order_by
  id: order_by
  imgUrl: order_by
  order: order_by
  type: order_by
  url: order_by
}

"""
select columns of table "discovery_banner"
"""
enum discovery_banner_select_column {
  """column name"""
  area

  """column name"""
  created_at

  """column name"""
  expiration_at

  """column name"""
  id

  """column name"""
  imgUrl

  """column name"""
  order

  """column name"""
  type

  """column name"""
  url
}

"""
Streaming cursor of the table "discovery_banner"
"""
input discovery_banner_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: discovery_banner_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input discovery_banner_stream_cursor_value_input {
  area: String
  created_at: timestamptz
  expiration_at: timestamptz
  id: Int
  imgUrl: String
  order: Int
  type: String
  url: String
}

"""advertisingList in home page"""
type home_news_banners {
  content: String!
  created_at: timestamp!
  expire_at: timestamp
  id: Int!
  scroll: Boolean!
  updated_at: timestamp!
  url: String!
  version: Int!
}

"""
Boolean expression to filter rows from the table "home_news_banners". All fields are combined with a logical 'AND'.
"""
input home_news_banners_bool_exp {
  _and: [home_news_banners_bool_exp!]
  _not: home_news_banners_bool_exp
  _or: [home_news_banners_bool_exp!]
  content: String_comparison_exp
  created_at: timestamp_comparison_exp
  expire_at: timestamp_comparison_exp
  id: Int_comparison_exp
  scroll: Boolean_comparison_exp
  updated_at: timestamp_comparison_exp
  url: String_comparison_exp
  version: Int_comparison_exp
}

"""Ordering options when selecting data from "home_news_banners"."""
input home_news_banners_order_by {
  content: order_by
  created_at: order_by
  expire_at: order_by
  id: order_by
  scroll: order_by
  updated_at: order_by
  url: order_by
  version: order_by
}

"""
select columns of table "home_news_banners"
"""
enum home_news_banners_select_column {
  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  expire_at

  """column name"""
  id

  """column name"""
  scroll

  """column name"""
  updated_at

  """column name"""
  url

  """column name"""
  version
}

"""
Streaming cursor of the table "home_news_banners"
"""
input home_news_banners_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: home_news_banners_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input home_news_banners_stream_cursor_value_input {
  content: String
  created_at: timestamp
  expire_at: timestamp
  id: Int
  scroll: Boolean
  updated_at: timestamp
  url: String
  version: Int
}

"""test table"""
type home_news_banners_test {
  content: String!
  created_at: timestamp!
  expire_at: timestamp
  id: Int!
  scroll: Boolean!
  updated_at: timestamp!
  url: String!
  version: Int!
}

"""
Boolean expression to filter rows from the table "home_news_banners_test". All fields are combined with a logical 'AND'.
"""
input home_news_banners_test_bool_exp {
  _and: [home_news_banners_test_bool_exp!]
  _not: home_news_banners_test_bool_exp
  _or: [home_news_banners_test_bool_exp!]
  content: String_comparison_exp
  created_at: timestamp_comparison_exp
  expire_at: timestamp_comparison_exp
  id: Int_comparison_exp
  scroll: Boolean_comparison_exp
  updated_at: timestamp_comparison_exp
  url: String_comparison_exp
  version: Int_comparison_exp
}

"""Ordering options when selecting data from "home_news_banners_test"."""
input home_news_banners_test_order_by {
  content: order_by
  created_at: order_by
  expire_at: order_by
  id: order_by
  scroll: order_by
  updated_at: order_by
  url: order_by
  version: order_by
}

"""
select columns of table "home_news_banners_test"
"""
enum home_news_banners_test_select_column {
  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  expire_at

  """column name"""
  id

  """column name"""
  scroll

  """column name"""
  updated_at

  """column name"""
  url

  """column name"""
  version
}

"""
Streaming cursor of the table "home_news_banners_test"
"""
input home_news_banners_test_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: home_news_banners_test_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input home_news_banners_test_stream_cursor_value_input {
  content: String
  created_at: timestamp
  expire_at: timestamp
  id: Int
  scroll: Boolean
  updated_at: timestamp
  url: String
  version: Int
}

"""
columns and relationships of "home_post_event"
"""
type home_post_event {
  end_at: timestamptz
  id: Int!
  post_img: String!
  post_title: String!
  start_at: timestamptz!
}

"""
Boolean expression to filter rows from the table "home_post_event". All fields are combined with a logical 'AND'.
"""
input home_post_event_bool_exp {
  _and: [home_post_event_bool_exp!]
  _not: home_post_event_bool_exp
  _or: [home_post_event_bool_exp!]
  end_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  post_img: String_comparison_exp
  post_title: String_comparison_exp
  start_at: timestamptz_comparison_exp
}

"""Ordering options when selecting data from "home_post_event"."""
input home_post_event_order_by {
  end_at: order_by
  id: order_by
  post_img: order_by
  post_title: order_by
  start_at: order_by
}

"""
select columns of table "home_post_event"
"""
enum home_post_event_select_column {
  """column name"""
  end_at

  """column name"""
  id

  """column name"""
  post_img

  """column name"""
  post_title

  """column name"""
  start_at
}

"""
Streaming cursor of the table "home_post_event"
"""
input home_post_event_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: home_post_event_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input home_post_event_stream_cursor_value_input {
  end_at: timestamptz
  id: Int
  post_img: String
  post_title: String
  start_at: timestamptz
}

"""
columns and relationships of "iip13_bucket_type_ignore"
"""
type iip13_bucket_type_ignore {
  amount: String!
  created_at: timestamptz!
  duration: numeric!
  id: Int!
  updated_at: timestamptz!
}

"""
Boolean expression to filter rows from the table "iip13_bucket_type_ignore". All fields are combined with a logical 'AND'.
"""
input iip13_bucket_type_ignore_bool_exp {
  _and: [iip13_bucket_type_ignore_bool_exp!]
  _not: iip13_bucket_type_ignore_bool_exp
  _or: [iip13_bucket_type_ignore_bool_exp!]
  amount: String_comparison_exp
  created_at: timestamptz_comparison_exp
  duration: numeric_comparison_exp
  id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""Ordering options when selecting data from "iip13_bucket_type_ignore"."""
input iip13_bucket_type_ignore_order_by {
  amount: order_by
  created_at: order_by
  duration: order_by
  id: order_by
  updated_at: order_by
}

"""
select columns of table "iip13_bucket_type_ignore"
"""
enum iip13_bucket_type_ignore_select_column {
  """column name"""
  amount

  """column name"""
  created_at

  """column name"""
  duration

  """column name"""
  id

  """column name"""
  updated_at
}

"""
Streaming cursor of the table "iip13_bucket_type_ignore"
"""
input iip13_bucket_type_ignore_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: iip13_bucket_type_ignore_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input iip13_bucket_type_ignore_stream_cursor_value_input {
  amount: String
  created_at: timestamptz
  duration: numeric
  id: Int
  updated_at: timestamptz
}

"""
columns and relationships of "iopay_device_config"
"""
type iopay_device_config {
  created_at: timestamptz
  deviceToken: String!
  news_push: Boolean!
  updated_at: timestamptz
}

"""
Boolean expression to filter rows from the table "iopay_device_config". All fields are combined with a logical 'AND'.
"""
input iopay_device_config_bool_exp {
  _and: [iopay_device_config_bool_exp!]
  _not: iopay_device_config_bool_exp
  _or: [iopay_device_config_bool_exp!]
  created_at: timestamptz_comparison_exp
  deviceToken: String_comparison_exp
  news_push: Boolean_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "iopay_device_config"
"""
enum iopay_device_config_constraint {
  """
  unique or primary key constraint on columns "deviceToken"
  """
  iopay_device_config_deviceToken_key

  """
  unique or primary key constraint on columns "deviceToken"
  """
  iopay_device_config_pkey
}

"""
input type for inserting data into table "iopay_device_config"
"""
input iopay_device_config_insert_input {
  created_at: timestamptz
  deviceToken: String
  news_push: Boolean
  updated_at: timestamptz
}

"""
response of any mutation on the table "iopay_device_config"
"""
type iopay_device_config_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [iopay_device_config!]!
}

"""
on_conflict condition type for table "iopay_device_config"
"""
input iopay_device_config_on_conflict {
  constraint: iopay_device_config_constraint!
  update_columns: [iopay_device_config_update_column!]! = []
  where: iopay_device_config_bool_exp
}

"""Ordering options when selecting data from "iopay_device_config"."""
input iopay_device_config_order_by {
  created_at: order_by
  deviceToken: order_by
  news_push: order_by
  updated_at: order_by
}

"""primary key columns input for table: iopay_device_config"""
input iopay_device_config_pk_columns_input {
  deviceToken: String!
}

"""
select columns of table "iopay_device_config"
"""
enum iopay_device_config_select_column {
  """column name"""
  created_at

  """column name"""
  deviceToken

  """column name"""
  news_push

  """column name"""
  updated_at
}

"""
input type for updating data in table "iopay_device_config"
"""
input iopay_device_config_set_input {
  created_at: timestamptz
  deviceToken: String
  news_push: Boolean
  updated_at: timestamptz
}

"""
Streaming cursor of the table "iopay_device_config"
"""
input iopay_device_config_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: iopay_device_config_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input iopay_device_config_stream_cursor_value_input {
  created_at: timestamptz
  deviceToken: String
  news_push: Boolean
  updated_at: timestamptz
}

"""
update columns of table "iopay_device_config"
"""
enum iopay_device_config_update_column {
  """column name"""
  created_at

  """column name"""
  deviceToken

  """column name"""
  news_push

  """column name"""
  updated_at
}

input iopay_device_config_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: iopay_device_config_set_input

  """filter the rows which have to be updated"""
  where: iopay_device_config_bool_exp!
}

"""iopay_earning_banner"""
type iopay_earning_banner {
  id: Int!
  image_url: String
  link_url: String
  order: Int!
}

"""
Boolean expression to filter rows from the table "iopay_earning_banner". All fields are combined with a logical 'AND'.
"""
input iopay_earning_banner_bool_exp {
  _and: [iopay_earning_banner_bool_exp!]
  _not: iopay_earning_banner_bool_exp
  _or: [iopay_earning_banner_bool_exp!]
  id: Int_comparison_exp
  image_url: String_comparison_exp
  link_url: String_comparison_exp
  order: Int_comparison_exp
}

"""Ordering options when selecting data from "iopay_earning_banner"."""
input iopay_earning_banner_order_by {
  id: order_by
  image_url: order_by
  link_url: order_by
  order: order_by
}

"""
select columns of table "iopay_earning_banner"
"""
enum iopay_earning_banner_select_column {
  """column name"""
  id

  """column name"""
  image_url

  """column name"""
  link_url

  """column name"""
  order
}

"""
Streaming cursor of the table "iopay_earning_banner"
"""
input iopay_earning_banner_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: iopay_earning_banner_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input iopay_earning_banner_stream_cursor_value_input {
  id: Int
  image_url: String
  link_url: String
  order: Int
}

"""iopay_earning_list"""
type iopay_earning_list {
  apy_end: Int!
  apy_start: Int!
  id: Int!
  main_token: String
  native_link: String
  project_icon: String!
  project_link: String
  project_name: String!
  term_end: Int
  term_start: Int
  type: Int!
}

"""
Boolean expression to filter rows from the table "iopay_earning_list". All fields are combined with a logical 'AND'.
"""
input iopay_earning_list_bool_exp {
  _and: [iopay_earning_list_bool_exp!]
  _not: iopay_earning_list_bool_exp
  _or: [iopay_earning_list_bool_exp!]
  apy_end: Int_comparison_exp
  apy_start: Int_comparison_exp
  id: Int_comparison_exp
  main_token: String_comparison_exp
  native_link: String_comparison_exp
  project_icon: String_comparison_exp
  project_link: String_comparison_exp
  project_name: String_comparison_exp
  term_end: Int_comparison_exp
  term_start: Int_comparison_exp
  type: Int_comparison_exp
}

"""Ordering options when selecting data from "iopay_earning_list"."""
input iopay_earning_list_order_by {
  apy_end: order_by
  apy_start: order_by
  id: order_by
  main_token: order_by
  native_link: order_by
  project_icon: order_by
  project_link: order_by
  project_name: order_by
  term_end: order_by
  term_start: order_by
  type: order_by
}

"""
select columns of table "iopay_earning_list"
"""
enum iopay_earning_list_select_column {
  """column name"""
  apy_end

  """column name"""
  apy_start

  """column name"""
  id

  """column name"""
  main_token

  """column name"""
  native_link

  """column name"""
  project_icon

  """column name"""
  project_link

  """column name"""
  project_name

  """column name"""
  term_end

  """column name"""
  term_start

  """column name"""
  type
}

"""
Streaming cursor of the table "iopay_earning_list"
"""
input iopay_earning_list_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: iopay_earning_list_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input iopay_earning_list_stream_cursor_value_input {
  apy_end: Int
  apy_start: Int
  id: Int
  main_token: String
  native_link: String
  project_icon: String
  project_link: String
  project_name: String
  term_end: Int
  term_start: Int
  type: Int
}

"""
columns and relationships of "iopay_wallet_models"
"""
type iopay_wallet_models {
  __v: String
  address: String
  createAt: timestamptz
  deviceToken: String
  id: String!
  name: String
  platform: String
  registerPushNotification: String
  updateAt: timestamptz
}

"""
Boolean expression to filter rows from the table "iopay_wallet_models". All fields are combined with a logical 'AND'.
"""
input iopay_wallet_models_bool_exp {
  __v: String_comparison_exp
  _and: [iopay_wallet_models_bool_exp!]
  _not: iopay_wallet_models_bool_exp
  _or: [iopay_wallet_models_bool_exp!]
  address: String_comparison_exp
  createAt: timestamptz_comparison_exp
  deviceToken: String_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  platform: String_comparison_exp
  registerPushNotification: String_comparison_exp
  updateAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "iopay_wallet_models"
"""
enum iopay_wallet_models_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  iopay_wallet_models_pkey
}

"""
input type for inserting data into table "iopay_wallet_models"
"""
input iopay_wallet_models_insert_input {
  __v: String
  address: String
  createAt: timestamptz
  deviceToken: String
  id: String
  name: String
  platform: String
  registerPushNotification: String
  updateAt: timestamptz
}

"""
response of any mutation on the table "iopay_wallet_models"
"""
type iopay_wallet_models_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [iopay_wallet_models!]!
}

"""
on_conflict condition type for table "iopay_wallet_models"
"""
input iopay_wallet_models_on_conflict {
  constraint: iopay_wallet_models_constraint!
  update_columns: [iopay_wallet_models_update_column!]! = []
  where: iopay_wallet_models_bool_exp
}

"""Ordering options when selecting data from "iopay_wallet_models"."""
input iopay_wallet_models_order_by {
  __v: order_by
  address: order_by
  createAt: order_by
  deviceToken: order_by
  id: order_by
  name: order_by
  platform: order_by
  registerPushNotification: order_by
  updateAt: order_by
}

"""primary key columns input for table: iopay_wallet_models"""
input iopay_wallet_models_pk_columns_input {
  id: String!
}

"""
select columns of table "iopay_wallet_models"
"""
enum iopay_wallet_models_select_column {
  """column name"""
  __v

  """column name"""
  address

  """column name"""
  createAt

  """column name"""
  deviceToken

  """column name"""
  id

  """column name"""
  name

  """column name"""
  platform

  """column name"""
  registerPushNotification

  """column name"""
  updateAt
}

"""
Streaming cursor of the table "iopay_wallet_models"
"""
input iopay_wallet_models_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: iopay_wallet_models_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input iopay_wallet_models_stream_cursor_value_input {
  __v: String
  address: String
  createAt: timestamptz
  deviceToken: String
  id: String
  name: String
  platform: String
  registerPushNotification: String
  updateAt: timestamptz
}

"""
columns and relationships of "iopay_wallet_models_test2"
"""
type iopay_wallet_models_test2 {
  address: String
  createAt: timestamptz
  deviceToken: String
  id: String!
  name: String
  platform: String
  registerPushNotification: String
  updateAt: timestamptz
}

"""
Boolean expression to filter rows from the table "iopay_wallet_models_test2". All fields are combined with a logical 'AND'.
"""
input iopay_wallet_models_test2_bool_exp {
  _and: [iopay_wallet_models_test2_bool_exp!]
  _not: iopay_wallet_models_test2_bool_exp
  _or: [iopay_wallet_models_test2_bool_exp!]
  address: String_comparison_exp
  createAt: timestamptz_comparison_exp
  deviceToken: String_comparison_exp
  id: String_comparison_exp
  name: String_comparison_exp
  platform: String_comparison_exp
  registerPushNotification: String_comparison_exp
  updateAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "iopay_wallet_models_test2"
"""
enum iopay_wallet_models_test2_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  iopay_wallet_models_test2_pkey
}

"""
input type for inserting data into table "iopay_wallet_models_test2"
"""
input iopay_wallet_models_test2_insert_input {
  address: String
  createAt: timestamptz
  deviceToken: String
  id: String
  name: String
  platform: String
  registerPushNotification: String
  updateAt: timestamptz
}

"""
response of any mutation on the table "iopay_wallet_models_test2"
"""
type iopay_wallet_models_test2_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [iopay_wallet_models_test2!]!
}

"""
on_conflict condition type for table "iopay_wallet_models_test2"
"""
input iopay_wallet_models_test2_on_conflict {
  constraint: iopay_wallet_models_test2_constraint!
  update_columns: [iopay_wallet_models_test2_update_column!]! = []
  where: iopay_wallet_models_test2_bool_exp
}

"""Ordering options when selecting data from "iopay_wallet_models_test2"."""
input iopay_wallet_models_test2_order_by {
  address: order_by
  createAt: order_by
  deviceToken: order_by
  id: order_by
  name: order_by
  platform: order_by
  registerPushNotification: order_by
  updateAt: order_by
}

"""
select columns of table "iopay_wallet_models_test2"
"""
enum iopay_wallet_models_test2_select_column {
  """column name"""
  address

  """column name"""
  createAt

  """column name"""
  deviceToken

  """column name"""
  id

  """column name"""
  name

  """column name"""
  platform

  """column name"""
  registerPushNotification

  """column name"""
  updateAt
}

"""
Streaming cursor of the table "iopay_wallet_models_test2"
"""
input iopay_wallet_models_test2_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: iopay_wallet_models_test2_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input iopay_wallet_models_test2_stream_cursor_value_input {
  address: String
  createAt: timestamptz
  deviceToken: String
  id: String
  name: String
  platform: String
  registerPushNotification: String
  updateAt: timestamptz
}

"""
placeholder for update columns of table "iopay_wallet_models_test2" (current role has no relevant permissions)
"""
enum iopay_wallet_models_test2_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

"""
placeholder for update columns of table "iopay_wallet_models" (current role has no relevant permissions)
"""
enum iopay_wallet_models_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

input iopay_wallet_models_updates {
  """filter the rows which have to be updated"""
  where: iopay_wallet_models_bool_exp!
}

scalar json

"""
Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'.
"""
input json_comparison_exp {
  _eq: json
  _gt: json
  _gte: json
  _in: [json!]
  _is_null: Boolean
  _lt: json
  _lte: json
  _neq: json
  _nin: [json!]
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "media"
"""
type media {
  author: String
  categories: [String!]
  date: timestamp!
  description: String!
  id: String!
  img_url: String
  link: String!
  source: String
  title: String!
}

"""
Boolean expression to filter rows from the table "media". All fields are combined with a logical 'AND'.
"""
input media_bool_exp {
  _and: [media_bool_exp!]
  _not: media_bool_exp
  _or: [media_bool_exp!]
  author: String_comparison_exp
  categories: String_array_comparison_exp
  date: timestamp_comparison_exp
  description: String_comparison_exp
  id: String_comparison_exp
  img_url: String_comparison_exp
  link: String_comparison_exp
  source: String_comparison_exp
  title: String_comparison_exp
}

"""Ordering options when selecting data from "media"."""
input media_order_by {
  author: order_by
  categories: order_by
  date: order_by
  description: order_by
  id: order_by
  img_url: order_by
  link: order_by
  source: order_by
  title: order_by
}

"""
select columns of table "media"
"""
enum media_select_column {
  """column name"""
  author

  """column name"""
  categories

  """column name"""
  date

  """column name"""
  description

  """column name"""
  id

  """column name"""
  img_url

  """column name"""
  link

  """column name"""
  source

  """column name"""
  title
}

"""
Streaming cursor of the table "media"
"""
input media_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: media_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input media_stream_cursor_value_input {
  author: String
  categories: [String!]
  date: timestamp
  description: String
  id: String
  img_url: String
  link: String
  source: String
  title: String
}

"""
columns and relationships of "metaPebble.pebble_contract"
"""
type metaPebble_pebble_contract {
  abi: String!
  address: String!
  name: String!
}

"""
Boolean expression to filter rows from the table "metaPebble.pebble_contract". All fields are combined with a logical 'AND'.
"""
input metaPebble_pebble_contract_bool_exp {
  _and: [metaPebble_pebble_contract_bool_exp!]
  _not: metaPebble_pebble_contract_bool_exp
  _or: [metaPebble_pebble_contract_bool_exp!]
  abi: String_comparison_exp
  address: String_comparison_exp
  name: String_comparison_exp
}

"""
columns and relationships of "metaPebble.pebble_contract_mainnet"
"""
type metaPebble_pebble_contract_mainnet {
  abi: String!
  address: String!
  name: String!
}

"""
Boolean expression to filter rows from the table "metaPebble.pebble_contract_mainnet". All fields are combined with a logical 'AND'.
"""
input metaPebble_pebble_contract_mainnet_bool_exp {
  _and: [metaPebble_pebble_contract_mainnet_bool_exp!]
  _not: metaPebble_pebble_contract_mainnet_bool_exp
  _or: [metaPebble_pebble_contract_mainnet_bool_exp!]
  abi: String_comparison_exp
  address: String_comparison_exp
  name: String_comparison_exp
}

"""
Ordering options when selecting data from "metaPebble.pebble_contract_mainnet".
"""
input metaPebble_pebble_contract_mainnet_order_by {
  abi: order_by
  address: order_by
  name: order_by
}

"""
select columns of table "metaPebble.pebble_contract_mainnet"
"""
enum metaPebble_pebble_contract_mainnet_select_column {
  """column name"""
  abi

  """column name"""
  address

  """column name"""
  name
}

"""
Streaming cursor of the table "metaPebble_pebble_contract_mainnet"
"""
input metaPebble_pebble_contract_mainnet_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: metaPebble_pebble_contract_mainnet_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input metaPebble_pebble_contract_mainnet_stream_cursor_value_input {
  abi: String
  address: String
  name: String
}

"""
Ordering options when selecting data from "metaPebble.pebble_contract".
"""
input metaPebble_pebble_contract_order_by {
  abi: order_by
  address: order_by
  name: order_by
}

"""
select columns of table "metaPebble.pebble_contract"
"""
enum metaPebble_pebble_contract_select_column {
  """column name"""
  abi

  """column name"""
  address

  """column name"""
  name
}

"""
Streaming cursor of the table "metaPebble_pebble_contract"
"""
input metaPebble_pebble_contract_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: metaPebble_pebble_contract_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input metaPebble_pebble_contract_stream_cursor_value_input {
  abi: String
  address: String
  name: String
}

"""
columns and relationships of "metaPebble.version_android"
"""
type metaPebble_version_android {
  code: Int!
  content: String
  forced_code: Int
  id: Int!
  url: String!
  version: String!
}

"""
Boolean expression to filter rows from the table "metaPebble.version_android". All fields are combined with a logical 'AND'.
"""
input metaPebble_version_android_bool_exp {
  _and: [metaPebble_version_android_bool_exp!]
  _not: metaPebble_version_android_bool_exp
  _or: [metaPebble_version_android_bool_exp!]
  code: Int_comparison_exp
  content: String_comparison_exp
  forced_code: Int_comparison_exp
  id: Int_comparison_exp
  url: String_comparison_exp
  version: String_comparison_exp
}

"""
Ordering options when selecting data from "metaPebble.version_android".
"""
input metaPebble_version_android_order_by {
  code: order_by
  content: order_by
  forced_code: order_by
  id: order_by
  url: order_by
  version: order_by
}

"""
select columns of table "metaPebble.version_android"
"""
enum metaPebble_version_android_select_column {
  """column name"""
  code

  """column name"""
  content

  """column name"""
  forced_code

  """column name"""
  id

  """column name"""
  url

  """column name"""
  version
}

"""
Streaming cursor of the table "metaPebble_version_android"
"""
input metaPebble_version_android_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: metaPebble_version_android_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input metaPebble_version_android_stream_cursor_value_input {
  code: Int
  content: String
  forced_code: Int
  id: Int
  url: String
  version: String
}

"""
columns and relationships of "metaPebble.version_ios"
"""
type metaPebble_version_ios {
  content: String!
  forced_version: String!
  url: String!
  version: String!
}

"""
Boolean expression to filter rows from the table "metaPebble.version_ios". All fields are combined with a logical 'AND'.
"""
input metaPebble_version_ios_bool_exp {
  _and: [metaPebble_version_ios_bool_exp!]
  _not: metaPebble_version_ios_bool_exp
  _or: [metaPebble_version_ios_bool_exp!]
  content: String_comparison_exp
  forced_version: String_comparison_exp
  url: String_comparison_exp
  version: String_comparison_exp
}

"""Ordering options when selecting data from "metaPebble.version_ios"."""
input metaPebble_version_ios_order_by {
  content: order_by
  forced_version: order_by
  url: order_by
  version: order_by
}

"""
select columns of table "metaPebble.version_ios"
"""
enum metaPebble_version_ios_select_column {
  """column name"""
  content

  """column name"""
  forced_version

  """column name"""
  url

  """column name"""
  version
}

"""
Streaming cursor of the table "metaPebble_version_ios"
"""
input metaPebble_version_ios_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: metaPebble_version_ios_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input metaPebble_version_ios_stream_cursor_value_input {
  content: String
  forced_version: String
  url: String
  version: String
}

"""mutation root"""
type mutation_root {
  """
  insert data into the table: "iopay_device_config"
  """
  insert_iopay_device_config(
    """the rows to be inserted"""
    objects: [iopay_device_config_insert_input!]!

    """upsert condition"""
    on_conflict: iopay_device_config_on_conflict
  ): iopay_device_config_mutation_response

  """
  insert a single row into the table: "iopay_device_config"
  """
  insert_iopay_device_config_one(
    """the row to be inserted"""
    object: iopay_device_config_insert_input!

    """upsert condition"""
    on_conflict: iopay_device_config_on_conflict
  ): iopay_device_config

  """
  insert data into the table: "iopay_wallet_models"
  """
  insert_iopay_wallet_models(
    """the rows to be inserted"""
    objects: [iopay_wallet_models_insert_input!]!

    """upsert condition"""
    on_conflict: iopay_wallet_models_on_conflict
  ): iopay_wallet_models_mutation_response

  """
  insert a single row into the table: "iopay_wallet_models"
  """
  insert_iopay_wallet_models_one(
    """the row to be inserted"""
    object: iopay_wallet_models_insert_input!

    """upsert condition"""
    on_conflict: iopay_wallet_models_on_conflict
  ): iopay_wallet_models

  """
  insert data into the table: "iopay_wallet_models_test2"
  """
  insert_iopay_wallet_models_test2(
    """the rows to be inserted"""
    objects: [iopay_wallet_models_test2_insert_input!]!

    """upsert condition"""
    on_conflict: iopay_wallet_models_test2_on_conflict
  ): iopay_wallet_models_test2_mutation_response

  """
  insert a single row into the table: "iopay_wallet_models_test2"
  """
  insert_iopay_wallet_models_test2_one(
    """the row to be inserted"""
    object: iopay_wallet_models_test2_insert_input!

    """upsert condition"""
    on_conflict: iopay_wallet_models_test2_on_conflict
  ): iopay_wallet_models_test2

  """
  insert data into the table: "wallet_info"
  """
  insert_wallet_info(
    """the rows to be inserted"""
    objects: [wallet_info_insert_input!]!

    """upsert condition"""
    on_conflict: wallet_info_on_conflict
  ): wallet_info_mutation_response

  """
  insert a single row into the table: "wallet_info"
  """
  insert_wallet_info_one(
    """the row to be inserted"""
    object: wallet_info_insert_input!

    """upsert condition"""
    on_conflict: wallet_info_on_conflict
  ): wallet_info

  """
  update data of the table: "iopay_device_config"
  """
  update_iopay_device_config(
    """sets the columns of the filtered rows to the given values"""
    _set: iopay_device_config_set_input

    """filter the rows which have to be updated"""
    where: iopay_device_config_bool_exp!
  ): iopay_device_config_mutation_response

  """
  update single row of the table: "iopay_device_config"
  """
  update_iopay_device_config_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: iopay_device_config_set_input
    pk_columns: iopay_device_config_pk_columns_input!
  ): iopay_device_config

  """
  update multiples rows of table: "iopay_device_config"
  """
  update_iopay_device_config_many(
    """updates to execute, in order"""
    updates: [iopay_device_config_updates!]!
  ): [iopay_device_config_mutation_response]

  """
  update data of the table: "iopay_wallet_models"
  """
  update_iopay_wallet_models(
    """filter the rows which have to be updated"""
    where: iopay_wallet_models_bool_exp!
  ): iopay_wallet_models_mutation_response

  """
  update single row of the table: "iopay_wallet_models"
  """
  update_iopay_wallet_models_by_pk(pk_columns: iopay_wallet_models_pk_columns_input!): iopay_wallet_models

  """
  update multiples rows of table: "iopay_wallet_models"
  """
  update_iopay_wallet_models_many(
    """updates to execute, in order"""
    updates: [iopay_wallet_models_updates!]!
  ): [iopay_wallet_models_mutation_response]

  """
  update data of the table: "wallet_info"
  """
  update_wallet_info(
    """sets the columns of the filtered rows to the given values"""
    _set: wallet_info_set_input

    """filter the rows which have to be updated"""
    where: wallet_info_bool_exp!
  ): wallet_info_mutation_response

  """
  update single row of the table: "wallet_info"
  """
  update_wallet_info_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: wallet_info_set_input
    pk_columns: wallet_info_pk_columns_input!
  ): wallet_info

  """
  update multiples rows of table: "wallet_info"
  """
  update_wallet_info_many(
    """updates to execute, in order"""
    updates: [wallet_info_updates!]!
  ): [wallet_info_mutation_response]
}

"""aa wallet network config"""
type network_aa_config {
  bound_email: String
  bundler_service: String
  chain_id: Int!
  email_service: String
  entry_point: String
  factory: String
  forceUsePaymaster: Boolean
  paymaster_service: String
  subgraph: String
}

"""
Boolean expression to filter rows from the table "network_aa_config". All fields are combined with a logical 'AND'.
"""
input network_aa_config_bool_exp {
  _and: [network_aa_config_bool_exp!]
  _not: network_aa_config_bool_exp
  _or: [network_aa_config_bool_exp!]
  bound_email: String_comparison_exp
  bundler_service: String_comparison_exp
  chain_id: Int_comparison_exp
  email_service: String_comparison_exp
  entry_point: String_comparison_exp
  factory: String_comparison_exp
  forceUsePaymaster: Boolean_comparison_exp
  paymaster_service: String_comparison_exp
  subgraph: String_comparison_exp
}

"""Ordering options when selecting data from "network_aa_config"."""
input network_aa_config_order_by {
  bound_email: order_by
  bundler_service: order_by
  chain_id: order_by
  email_service: order_by
  entry_point: order_by
  factory: order_by
  forceUsePaymaster: order_by
  paymaster_service: order_by
  subgraph: order_by
}

"""
select columns of table "network_aa_config"
"""
enum network_aa_config_select_column {
  """column name"""
  bound_email

  """column name"""
  bundler_service

  """column name"""
  chain_id

  """column name"""
  email_service

  """column name"""
  entry_point

  """column name"""
  factory

  """column name"""
  forceUsePaymaster

  """column name"""
  paymaster_service

  """column name"""
  subgraph
}

"""
Streaming cursor of the table "network_aa_config"
"""
input network_aa_config_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: network_aa_config_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input network_aa_config_stream_cursor_value_input {
  bound_email: String
  bundler_service: String
  chain_id: Int
  email_service: String
  entry_point: String
  factory: String
  forceUsePaymaster: Boolean
  paymaster_service: String
  subgraph: String
}

"""
columns and relationships of "network_chain_theme"
"""
type network_chain_theme {
  back_image: String
  chain_id: Int!
  logo_image: String
  theme_color: String
}

"""
Boolean expression to filter rows from the table "network_chain_theme". All fields are combined with a logical 'AND'.
"""
input network_chain_theme_bool_exp {
  _and: [network_chain_theme_bool_exp!]
  _not: network_chain_theme_bool_exp
  _or: [network_chain_theme_bool_exp!]
  back_image: String_comparison_exp
  chain_id: Int_comparison_exp
  logo_image: String_comparison_exp
  theme_color: String_comparison_exp
}

"""Ordering options when selecting data from "network_chain_theme"."""
input network_chain_theme_order_by {
  back_image: order_by
  chain_id: order_by
  logo_image: order_by
  theme_color: order_by
}

"""
select columns of table "network_chain_theme"
"""
enum network_chain_theme_select_column {
  """column name"""
  back_image

  """column name"""
  chain_id

  """column name"""
  logo_image

  """column name"""
  theme_color
}

"""
Streaming cursor of the table "network_chain_theme"
"""
input network_chain_theme_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: network_chain_theme_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input network_chain_theme_stream_cursor_value_input {
  back_image: String
  chain_id: Int
  logo_image: String
  theme_color: String
}

"""
columns and relationships of "network_config"
"""
type network_config {
  account_factory: String
  back_image: String
  chain_icon: String
  chain_icon_selected: String
  chain_id: Int!
  contract_email: String
  entry_point: String
  gas_limit: bigint
  gas_price: bigint
  gas_station: String
  logo_image: String
  theme_color: String
  token_approval_checker: String!
}

"""
Boolean expression to filter rows from the table "network_config". All fields are combined with a logical 'AND'.
"""
input network_config_bool_exp {
  _and: [network_config_bool_exp!]
  _not: network_config_bool_exp
  _or: [network_config_bool_exp!]
  account_factory: String_comparison_exp
  back_image: String_comparison_exp
  chain_icon: String_comparison_exp
  chain_icon_selected: String_comparison_exp
  chain_id: Int_comparison_exp
  contract_email: String_comparison_exp
  entry_point: String_comparison_exp
  gas_limit: bigint_comparison_exp
  gas_price: bigint_comparison_exp
  gas_station: String_comparison_exp
  logo_image: String_comparison_exp
  theme_color: String_comparison_exp
  token_approval_checker: String_comparison_exp
}

"""Ordering options when selecting data from "network_config"."""
input network_config_order_by {
  account_factory: order_by
  back_image: order_by
  chain_icon: order_by
  chain_icon_selected: order_by
  chain_id: order_by
  contract_email: order_by
  entry_point: order_by
  gas_limit: order_by
  gas_price: order_by
  gas_station: order_by
  logo_image: order_by
  theme_color: order_by
  token_approval_checker: order_by
}

"""
select columns of table "network_config"
"""
enum network_config_select_column {
  """column name"""
  account_factory

  """column name"""
  back_image

  """column name"""
  chain_icon

  """column name"""
  chain_icon_selected

  """column name"""
  chain_id

  """column name"""
  contract_email

  """column name"""
  entry_point

  """column name"""
  gas_limit

  """column name"""
  gas_price

  """column name"""
  gas_station

  """column name"""
  logo_image

  """column name"""
  theme_color

  """column name"""
  token_approval_checker
}

"""
Streaming cursor of the table "network_config"
"""
input network_config_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: network_config_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input network_config_stream_cursor_value_input {
  account_factory: String
  back_image: String
  chain_icon: String
  chain_icon_selected: String
  chain_id: Int
  contract_email: String
  entry_point: String
  gas_limit: bigint
  gas_price: bigint
  gas_station: String
  logo_image: String
  theme_color: String
  token_approval_checker: String
}

"""
columns and relationships of "network_list"
"""
type network_list {
  bg_color_end: String
  bg_color_start: String
  bg_image: String
  chainId: Int!
  config(
    """JSON select path"""
    path: String
  ): json!
  devMode: Boolean
  explorer: String
  icon: String
  id: Int!
  logoUrl: String
  more_config: Int
  multicallAddr: String!
  name: String
  nativeCurrencyId: String

  """An object relationship"""
  nativeCurrencyMarket: coingeko_market
  networkName: String!

  """An object relationship"""
  network_chain_theme: network_chain_theme

  """An object relationship"""
  network_config: network_config
  order: Int
  platform: String!
  rpc(
    """JSON select path"""
    path: String
  ): jsonb
  shortName: String
  swapUrl: String
  theme_bg: String
  theme_bg2: String
  tokensAlias: String
}

"""
aggregated selection of "network_list"
"""
type network_list_aggregate {
  aggregate: network_list_aggregate_fields
  nodes: [network_list!]!
}

"""
aggregate fields of "network_list"
"""
type network_list_aggregate_fields {
  avg: network_list_avg_fields
  count(columns: [network_list_select_column!], distinct: Boolean): Int!
  max: network_list_max_fields
  min: network_list_min_fields
  stddev: network_list_stddev_fields
  stddev_pop: network_list_stddev_pop_fields
  stddev_samp: network_list_stddev_samp_fields
  sum: network_list_sum_fields
  var_pop: network_list_var_pop_fields
  var_samp: network_list_var_samp_fields
  variance: network_list_variance_fields
}

"""aggregate avg on columns"""
type network_list_avg_fields {
  chainId: Float
  id: Float
  more_config: Float
  order: Float
}

"""
Boolean expression to filter rows from the table "network_list". All fields are combined with a logical 'AND'.
"""
input network_list_bool_exp {
  _and: [network_list_bool_exp!]
  _not: network_list_bool_exp
  _or: [network_list_bool_exp!]
  bg_color_end: String_comparison_exp
  bg_color_start: String_comparison_exp
  bg_image: String_comparison_exp
  chainId: Int_comparison_exp
  config: json_comparison_exp
  devMode: Boolean_comparison_exp
  explorer: String_comparison_exp
  icon: String_comparison_exp
  id: Int_comparison_exp
  logoUrl: String_comparison_exp
  more_config: Int_comparison_exp
  multicallAddr: String_comparison_exp
  name: String_comparison_exp
  nativeCurrencyId: String_comparison_exp
  nativeCurrencyMarket: coingeko_market_bool_exp
  networkName: String_comparison_exp
  network_chain_theme: network_chain_theme_bool_exp
  network_config: network_config_bool_exp
  order: Int_comparison_exp
  platform: String_comparison_exp
  rpc: jsonb_comparison_exp
  shortName: String_comparison_exp
  swapUrl: String_comparison_exp
  theme_bg: String_comparison_exp
  theme_bg2: String_comparison_exp
  tokensAlias: String_comparison_exp
}

"""aggregate max on columns"""
type network_list_max_fields {
  bg_color_end: String
  bg_color_start: String
  bg_image: String
  chainId: Int
  explorer: String
  icon: String
  id: Int
  logoUrl: String
  more_config: Int
  multicallAddr: String
  name: String
  nativeCurrencyId: String
  networkName: String
  order: Int
  platform: String
  shortName: String
  swapUrl: String
  theme_bg: String
  theme_bg2: String
  tokensAlias: String
}

"""aggregate min on columns"""
type network_list_min_fields {
  bg_color_end: String
  bg_color_start: String
  bg_image: String
  chainId: Int
  explorer: String
  icon: String
  id: Int
  logoUrl: String
  more_config: Int
  multicallAddr: String
  name: String
  nativeCurrencyId: String
  networkName: String
  order: Int
  platform: String
  shortName: String
  swapUrl: String
  theme_bg: String
  theme_bg2: String
  tokensAlias: String
}

"""Ordering options when selecting data from "network_list"."""
input network_list_order_by {
  bg_color_end: order_by
  bg_color_start: order_by
  bg_image: order_by
  chainId: order_by
  config: order_by
  devMode: order_by
  explorer: order_by
  icon: order_by
  id: order_by
  logoUrl: order_by
  more_config: order_by
  multicallAddr: order_by
  name: order_by
  nativeCurrencyId: order_by
  nativeCurrencyMarket: coingeko_market_order_by
  networkName: order_by
  network_chain_theme: network_chain_theme_order_by
  network_config: network_config_order_by
  order: order_by
  platform: order_by
  rpc: order_by
  shortName: order_by
  swapUrl: order_by
  theme_bg: order_by
  theme_bg2: order_by
  tokensAlias: order_by
}

"""
select columns of table "network_list"
"""
enum network_list_select_column {
  """column name"""
  bg_color_end

  """column name"""
  bg_color_start

  """column name"""
  bg_image

  """column name"""
  chainId

  """column name"""
  config

  """column name"""
  devMode

  """column name"""
  explorer

  """column name"""
  icon

  """column name"""
  id

  """column name"""
  logoUrl

  """column name"""
  more_config

  """column name"""
  multicallAddr

  """column name"""
  name

  """column name"""
  nativeCurrencyId

  """column name"""
  networkName

  """column name"""
  order

  """column name"""
  platform

  """column name"""
  rpc

  """column name"""
  shortName

  """column name"""
  swapUrl

  """column name"""
  theme_bg

  """column name"""
  theme_bg2

  """column name"""
  tokensAlias
}

"""aggregate stddev on columns"""
type network_list_stddev_fields {
  chainId: Float
  id: Float
  more_config: Float
  order: Float
}

"""aggregate stddev_pop on columns"""
type network_list_stddev_pop_fields {
  chainId: Float
  id: Float
  more_config: Float
  order: Float
}

"""aggregate stddev_samp on columns"""
type network_list_stddev_samp_fields {
  chainId: Float
  id: Float
  more_config: Float
  order: Float
}

"""
Streaming cursor of the table "network_list"
"""
input network_list_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: network_list_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input network_list_stream_cursor_value_input {
  bg_color_end: String
  bg_color_start: String
  bg_image: String
  chainId: Int
  config: json
  devMode: Boolean
  explorer: String
  icon: String
  id: Int
  logoUrl: String
  more_config: Int
  multicallAddr: String
  name: String
  nativeCurrencyId: String
  networkName: String
  order: Int
  platform: String
  rpc: jsonb
  shortName: String
  swapUrl: String
  theme_bg: String
  theme_bg2: String
  tokensAlias: String
}

"""aggregate sum on columns"""
type network_list_sum_fields {
  chainId: Int
  id: Int
  more_config: Int
  order: Int
}

"""aggregate var_pop on columns"""
type network_list_var_pop_fields {
  chainId: Float
  id: Float
  more_config: Float
  order: Float
}

"""aggregate var_samp on columns"""
type network_list_var_samp_fields {
  chainId: Float
  id: Float
  more_config: Float
  order: Float
}

"""aggregate variance on columns"""
type network_list_variance_fields {
  chainId: Float
  id: Float
  more_config: Float
  order: Float
}

"""
columns and relationships of "new_wallet_claims"
"""
type new_wallet_claims {
  __v: String
  address: String
  claimStatus: String
  createAt: timestamptz
  deviceId: String
  id: String!
  iotxTransferActionHash: String
  requestIp: String
  updateAt: timestamptz
}

"""
Boolean expression to filter rows from the table "new_wallet_claims". All fields are combined with a logical 'AND'.
"""
input new_wallet_claims_bool_exp {
  __v: String_comparison_exp
  _and: [new_wallet_claims_bool_exp!]
  _not: new_wallet_claims_bool_exp
  _or: [new_wallet_claims_bool_exp!]
  address: String_comparison_exp
  claimStatus: String_comparison_exp
  createAt: timestamptz_comparison_exp
  deviceId: String_comparison_exp
  id: String_comparison_exp
  iotxTransferActionHash: String_comparison_exp
  requestIp: String_comparison_exp
  updateAt: timestamptz_comparison_exp
}

"""Ordering options when selecting data from "new_wallet_claims"."""
input new_wallet_claims_order_by {
  __v: order_by
  address: order_by
  claimStatus: order_by
  createAt: order_by
  deviceId: order_by
  id: order_by
  iotxTransferActionHash: order_by
  requestIp: order_by
  updateAt: order_by
}

"""
select columns of table "new_wallet_claims"
"""
enum new_wallet_claims_select_column {
  """column name"""
  __v

  """column name"""
  address

  """column name"""
  claimStatus

  """column name"""
  createAt

  """column name"""
  deviceId

  """column name"""
  id

  """column name"""
  iotxTransferActionHash

  """column name"""
  requestIp

  """column name"""
  updateAt
}

"""
Streaming cursor of the table "new_wallet_claims"
"""
input new_wallet_claims_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: new_wallet_claims_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input new_wallet_claims_stream_cursor_value_input {
  __v: String
  address: String
  claimStatus: String
  createAt: timestamptz
  deviceId: String
  id: String
  iotxTransferActionHash: String
  requestIp: String
  updateAt: timestamptz
}

"""
columns and relationships of "nft_token_list"
"""
type nft_token_list {
  address: String
  chainId: Int
  decimals: Int
  id: String!
  logo: String
  name: String
  source: String
  symbol: String
}

"""
Boolean expression to filter rows from the table "nft_token_list". All fields are combined with a logical 'AND'.
"""
input nft_token_list_bool_exp {
  _and: [nft_token_list_bool_exp!]
  _not: nft_token_list_bool_exp
  _or: [nft_token_list_bool_exp!]
  address: String_comparison_exp
  chainId: Int_comparison_exp
  decimals: Int_comparison_exp
  id: String_comparison_exp
  logo: String_comparison_exp
  name: String_comparison_exp
  source: String_comparison_exp
  symbol: String_comparison_exp
}

"""Ordering options when selecting data from "nft_token_list"."""
input nft_token_list_order_by {
  address: order_by
  chainId: order_by
  decimals: order_by
  id: order_by
  logo: order_by
  name: order_by
  source: order_by
  symbol: order_by
}

"""
select columns of table "nft_token_list"
"""
enum nft_token_list_select_column {
  """column name"""
  address

  """column name"""
  chainId

  """column name"""
  decimals

  """column name"""
  id

  """column name"""
  logo

  """column name"""
  name

  """column name"""
  source

  """column name"""
  symbol
}

"""
Streaming cursor of the table "nft_token_list"
"""
input nft_token_list_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: nft_token_list_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input nft_token_list_stream_cursor_value_input {
  address: String
  chainId: Int
  decimals: Int
  id: String
  logo: String
  name: String
  source: String
  symbol: String
}

scalar numeric

"""
Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """
  fetch data from the table: "app_img_cache_update"
  """
  app_img_cache_update(
    """distinct select on columns"""
    distinct_on: [app_img_cache_update_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [app_img_cache_update_order_by!]

    """filter the rows returned"""
    where: app_img_cache_update_bool_exp
  ): [app_img_cache_update!]!

  """
  fetch data from the table: "app_img_cache_update" using primary key columns
  """
  app_img_cache_update_by_pk(id: bigint!): app_img_cache_update

  """
  fetch data from the table: "buy_iotex"
  """
  buy_iotex(
    """distinct select on columns"""
    distinct_on: [buy_iotex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [buy_iotex_order_by!]

    """filter the rows returned"""
    where: buy_iotex_bool_exp
  ): [buy_iotex!]!

  """fetch data from the table: "buy_iotex" using primary key columns"""
  buy_iotex_by_pk(id: Int!): buy_iotex

  """
  fetch data from the table: "campaign_labels"
  """
  campaign_labels(
    """distinct select on columns"""
    distinct_on: [campaign_labels_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [campaign_labels_order_by!]

    """filter the rows returned"""
    where: campaign_labels_bool_exp
  ): [campaign_labels!]!

  """fetch data from the table: "campaign_labels" using primary key columns"""
  campaign_labels_by_pk(id: Int!): campaign_labels

  """
  fetch data from the table: "campaign_list"
  """
  campaign_list(
    """distinct select on columns"""
    distinct_on: [campaign_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [campaign_list_order_by!]

    """filter the rows returned"""
    where: campaign_list_bool_exp
  ): [campaign_list!]!

  """fetch data from the table: "campaign_list" using primary key columns"""
  campaign_list_by_pk(id: Int!): campaign_list

  """
  fetch data from the table: "certified_contract"
  """
  certified_contract(
    """distinct select on columns"""
    distinct_on: [certified_contract_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [certified_contract_order_by!]

    """filter the rows returned"""
    where: certified_contract_bool_exp
  ): [certified_contract!]!

  """
  fetch data from the table: "certified_contract" using primary key columns
  """
  certified_contract_by_pk(id: Int!): certified_contract

  """
  fetch data from the table: "coingecko_coin_detail"
  """
  coingecko_coin_detail(
    """distinct select on columns"""
    distinct_on: [coingecko_coin_detail_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [coingecko_coin_detail_order_by!]

    """filter the rows returned"""
    where: coingecko_coin_detail_bool_exp
  ): [coingecko_coin_detail!]!

  """
  fetch data from the table: "coingecko_coin_detail" using primary key columns
  """
  coingecko_coin_detail_by_pk(id: String!): coingecko_coin_detail

  """
  fetch data from the table: "coingeko_market"
  """
  coingeko_market(
    """distinct select on columns"""
    distinct_on: [coingeko_market_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [coingeko_market_order_by!]

    """filter the rows returned"""
    where: coingeko_market_bool_exp
  ): [coingeko_market!]!

  """fetch data from the table: "coingeko_market" using primary key columns"""
  coingeko_market_by_pk(id: String!): coingeko_market

  """
  fetch data from the table: "contract_error_msg"
  """
  contract_error_msg(
    """distinct select on columns"""
    distinct_on: [contract_error_msg_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_error_msg_order_by!]

    """filter the rows returned"""
    where: contract_error_msg_bool_exp
  ): [contract_error_msg!]!

  """
  fetch data from the table: "contract_error_msg" using primary key columns
  """
  contract_error_msg_by_pk(id: Int!): contract_error_msg

  """
  fetch data from the table: "dapp_category"
  """
  dapp_category(
    """distinct select on columns"""
    distinct_on: [dapp_category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_category_order_by!]

    """filter the rows returned"""
    where: dapp_category_bool_exp
  ): [dapp_category!]!

  """
  fetch data from the table: "dapp_category_banner"
  """
  dapp_category_banner(
    """distinct select on columns"""
    distinct_on: [dapp_category_banner_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_category_banner_order_by!]

    """filter the rows returned"""
    where: dapp_category_banner_bool_exp
  ): [dapp_category_banner!]!

  """
  fetch data from the table: "dapp_category_banner" using primary key columns
  """
  dapp_category_banner_by_pk(link: String!): dapp_category_banner

  """fetch data from the table: "dapp_category" using primary key columns"""
  dapp_category_by_pk(id: bigint!): dapp_category

  """
  fetch data from the table: "dapp_list"
  """
  dapp_list(
    """distinct select on columns"""
    distinct_on: [dapp_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_order_by!]

    """filter the rows returned"""
    where: dapp_list_bool_exp
  ): [dapp_list!]!

  """fetch data from the table: "dapp_list" using primary key columns"""
  dapp_list_by_pk(id: String!): dapp_list

  """
  fetch data from the table: "dapp_list_latest"
  """
  dapp_list_latest(
    """distinct select on columns"""
    distinct_on: [dapp_list_latest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_latest_order_by!]

    """filter the rows returned"""
    where: dapp_list_latest_bool_exp
  ): [dapp_list_latest!]!

  """
  fetch data from the table: "dapp_list_latest" using primary key columns
  """
  dapp_list_latest_by_pk(id: Int!): dapp_list_latest

  """
  fetch data from the table: "dapp_list_latest_v2"
  """
  dapp_list_latest_v2(
    """distinct select on columns"""
    distinct_on: [dapp_list_latest_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_latest_v2_order_by!]

    """filter the rows returned"""
    where: dapp_list_latest_v2_bool_exp
  ): [dapp_list_latest_v2!]!

  """
  fetch aggregated fields from the table: "dapp_list_latest_v2"
  """
  dapp_list_latest_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [dapp_list_latest_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_latest_v2_order_by!]

    """filter the rows returned"""
    where: dapp_list_latest_v2_bool_exp
  ): dapp_list_latest_v2_aggregate!

  """
  fetch data from the table: "dapp_list_latest_v2" using primary key columns
  """
  dapp_list_latest_v2_by_pk(id: Int!): dapp_list_latest_v2

  """
  fetch data from the table: "dapp_list_v3"
  """
  dapp_list_v3(
    """distinct select on columns"""
    distinct_on: [dapp_list_v3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_v3_order_by!]

    """filter the rows returned"""
    where: dapp_list_v3_bool_exp
  ): [dapp_list_v3!]!

  """fetch data from the table: "dapp_list_v3" using primary key columns"""
  dapp_list_v3_by_pk(id: String!): dapp_list_v3

  """
  fetch data from the table: "dapp_list_v4"
  """
  dapp_list_v4(
    """distinct select on columns"""
    distinct_on: [dapp_list_v4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_v4_order_by!]

    """filter the rows returned"""
    where: dapp_list_v4_bool_exp
  ): [dapp_list_v4!]!

  """fetch data from the table: "dapp_list_v4" using primary key columns"""
  dapp_list_v4_by_pk(id: String!): dapp_list_v4

  """
  fetch data from the table: "dapp_list_v5"
  """
  dapp_list_v5(
    """distinct select on columns"""
    distinct_on: [dapp_list_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_v5_order_by!]

    """filter the rows returned"""
    where: dapp_list_v5_bool_exp
  ): [dapp_list_v5!]!

  """fetch data from the table: "dapp_list_v5" using primary key columns"""
  dapp_list_v5_by_pk(id: String!): dapp_list_v5

  """
  fetch data from the table: "dapp_promote"
  """
  dapp_promote(
    """distinct select on columns"""
    distinct_on: [dapp_promote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_promote_order_by!]

    """filter the rows returned"""
    where: dapp_promote_bool_exp
  ): [dapp_promote!]!

  """fetch data from the table: "dapp_promote" using primary key columns"""
  dapp_promote_by_pk(id: String!): dapp_promote

  """
  fetch data from the table: "discovery_banner"
  """
  discovery_banner(
    """distinct select on columns"""
    distinct_on: [discovery_banner_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [discovery_banner_order_by!]

    """filter the rows returned"""
    where: discovery_banner_bool_exp
  ): [discovery_banner!]!

  """
  fetch data from the table: "discovery_banner" using primary key columns
  """
  discovery_banner_by_pk(id: Int!): discovery_banner

  """
  fetch data from the table: "home_news_banners"
  """
  home_news_banners(
    """distinct select on columns"""
    distinct_on: [home_news_banners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [home_news_banners_order_by!]

    """filter the rows returned"""
    where: home_news_banners_bool_exp
  ): [home_news_banners!]!

  """
  fetch data from the table: "home_news_banners" using primary key columns
  """
  home_news_banners_by_pk(id: Int!): home_news_banners

  """
  fetch data from the table: "home_news_banners_test"
  """
  home_news_banners_test(
    """distinct select on columns"""
    distinct_on: [home_news_banners_test_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [home_news_banners_test_order_by!]

    """filter the rows returned"""
    where: home_news_banners_test_bool_exp
  ): [home_news_banners_test!]!

  """
  fetch data from the table: "home_news_banners_test" using primary key columns
  """
  home_news_banners_test_by_pk(id: Int!): home_news_banners_test

  """
  fetch data from the table: "home_post_event"
  """
  home_post_event(
    """distinct select on columns"""
    distinct_on: [home_post_event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [home_post_event_order_by!]

    """filter the rows returned"""
    where: home_post_event_bool_exp
  ): [home_post_event!]!

  """fetch data from the table: "home_post_event" using primary key columns"""
  home_post_event_by_pk(id: Int!): home_post_event

  """
  fetch data from the table: "iip13_bucket_type_ignore"
  """
  iip13_bucket_type_ignore(
    """distinct select on columns"""
    distinct_on: [iip13_bucket_type_ignore_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iip13_bucket_type_ignore_order_by!]

    """filter the rows returned"""
    where: iip13_bucket_type_ignore_bool_exp
  ): [iip13_bucket_type_ignore!]!

  """
  fetch data from the table: "iip13_bucket_type_ignore" using primary key columns
  """
  iip13_bucket_type_ignore_by_pk(id: Int!): iip13_bucket_type_ignore

  """
  fetch data from the table: "iopay_device_config"
  """
  iopay_device_config(
    """distinct select on columns"""
    distinct_on: [iopay_device_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_device_config_order_by!]

    """filter the rows returned"""
    where: iopay_device_config_bool_exp
  ): [iopay_device_config!]!

  """
  fetch data from the table: "iopay_device_config" using primary key columns
  """
  iopay_device_config_by_pk(deviceToken: String!): iopay_device_config

  """
  fetch data from the table: "iopay_earning_banner"
  """
  iopay_earning_banner(
    """distinct select on columns"""
    distinct_on: [iopay_earning_banner_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_earning_banner_order_by!]

    """filter the rows returned"""
    where: iopay_earning_banner_bool_exp
  ): [iopay_earning_banner!]!

  """
  fetch data from the table: "iopay_earning_banner" using primary key columns
  """
  iopay_earning_banner_by_pk(id: Int!): iopay_earning_banner

  """
  fetch data from the table: "iopay_earning_list"
  """
  iopay_earning_list(
    """distinct select on columns"""
    distinct_on: [iopay_earning_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_earning_list_order_by!]

    """filter the rows returned"""
    where: iopay_earning_list_bool_exp
  ): [iopay_earning_list!]!

  """
  fetch data from the table: "iopay_earning_list" using primary key columns
  """
  iopay_earning_list_by_pk(id: Int!): iopay_earning_list

  """
  fetch data from the table: "iopay_wallet_models"
  """
  iopay_wallet_models(
    """distinct select on columns"""
    distinct_on: [iopay_wallet_models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_wallet_models_order_by!]

    """filter the rows returned"""
    where: iopay_wallet_models_bool_exp
  ): [iopay_wallet_models!]!

  """
  fetch data from the table: "iopay_wallet_models" using primary key columns
  """
  iopay_wallet_models_by_pk(id: String!): iopay_wallet_models

  """
  fetch data from the table: "iopay_wallet_models_test2"
  """
  iopay_wallet_models_test2(
    """distinct select on columns"""
    distinct_on: [iopay_wallet_models_test2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_wallet_models_test2_order_by!]

    """filter the rows returned"""
    where: iopay_wallet_models_test2_bool_exp
  ): [iopay_wallet_models_test2!]!

  """
  fetch data from the table: "iopay_wallet_models_test2" using primary key columns
  """
  iopay_wallet_models_test2_by_pk(id: String!): iopay_wallet_models_test2

  """
  fetch data from the table: "media"
  """
  media(
    """distinct select on columns"""
    distinct_on: [media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_order_by!]

    """filter the rows returned"""
    where: media_bool_exp
  ): [media!]!

  """fetch data from the table: "media" using primary key columns"""
  media_by_pk(id: String!): media

  """
  fetch data from the table: "metaPebble.pebble_contract"
  """
  metaPebble_pebble_contract(
    """distinct select on columns"""
    distinct_on: [metaPebble_pebble_contract_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metaPebble_pebble_contract_order_by!]

    """filter the rows returned"""
    where: metaPebble_pebble_contract_bool_exp
  ): [metaPebble_pebble_contract!]!

  """
  fetch data from the table: "metaPebble.pebble_contract" using primary key columns
  """
  metaPebble_pebble_contract_by_pk(address: String!): metaPebble_pebble_contract

  """
  fetch data from the table: "metaPebble.pebble_contract_mainnet"
  """
  metaPebble_pebble_contract_mainnet(
    """distinct select on columns"""
    distinct_on: [metaPebble_pebble_contract_mainnet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metaPebble_pebble_contract_mainnet_order_by!]

    """filter the rows returned"""
    where: metaPebble_pebble_contract_mainnet_bool_exp
  ): [metaPebble_pebble_contract_mainnet!]!

  """
  fetch data from the table: "metaPebble.pebble_contract_mainnet" using primary key columns
  """
  metaPebble_pebble_contract_mainnet_by_pk(name: String!): metaPebble_pebble_contract_mainnet

  """
  fetch data from the table: "metaPebble.version_android"
  """
  metaPebble_version_android(
    """distinct select on columns"""
    distinct_on: [metaPebble_version_android_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metaPebble_version_android_order_by!]

    """filter the rows returned"""
    where: metaPebble_version_android_bool_exp
  ): [metaPebble_version_android!]!

  """
  fetch data from the table: "metaPebble.version_android" using primary key columns
  """
  metaPebble_version_android_by_pk(id: Int!): metaPebble_version_android

  """
  fetch data from the table: "metaPebble.version_ios"
  """
  metaPebble_version_ios(
    """distinct select on columns"""
    distinct_on: [metaPebble_version_ios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metaPebble_version_ios_order_by!]

    """filter the rows returned"""
    where: metaPebble_version_ios_bool_exp
  ): [metaPebble_version_ios!]!

  """
  fetch data from the table: "metaPebble.version_ios" using primary key columns
  """
  metaPebble_version_ios_by_pk(url: String!): metaPebble_version_ios

  """
  fetch data from the table: "network_aa_config"
  """
  network_aa_config(
    """distinct select on columns"""
    distinct_on: [network_aa_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_aa_config_order_by!]

    """filter the rows returned"""
    where: network_aa_config_bool_exp
  ): [network_aa_config!]!

  """
  fetch data from the table: "network_aa_config" using primary key columns
  """
  network_aa_config_by_pk(chain_id: Int!): network_aa_config

  """
  fetch data from the table: "network_chain_theme"
  """
  network_chain_theme(
    """distinct select on columns"""
    distinct_on: [network_chain_theme_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_chain_theme_order_by!]

    """filter the rows returned"""
    where: network_chain_theme_bool_exp
  ): [network_chain_theme!]!

  """
  fetch data from the table: "network_chain_theme" using primary key columns
  """
  network_chain_theme_by_pk(chain_id: Int!): network_chain_theme

  """
  fetch data from the table: "network_config"
  """
  network_config(
    """distinct select on columns"""
    distinct_on: [network_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_config_order_by!]

    """filter the rows returned"""
    where: network_config_bool_exp
  ): [network_config!]!

  """fetch data from the table: "network_config" using primary key columns"""
  network_config_by_pk(chain_id: Int!): network_config

  """
  fetch data from the table: "network_list"
  """
  network_list(
    """distinct select on columns"""
    distinct_on: [network_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_list_order_by!]

    """filter the rows returned"""
    where: network_list_bool_exp
  ): [network_list!]!

  """
  fetch aggregated fields from the table: "network_list"
  """
  network_list_aggregate(
    """distinct select on columns"""
    distinct_on: [network_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_list_order_by!]

    """filter the rows returned"""
    where: network_list_bool_exp
  ): network_list_aggregate!

  """fetch data from the table: "network_list" using primary key columns"""
  network_list_by_pk(id: Int!): network_list

  """
  fetch data from the table: "new_wallet_claims"
  """
  new_wallet_claims(
    """distinct select on columns"""
    distinct_on: [new_wallet_claims_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [new_wallet_claims_order_by!]

    """filter the rows returned"""
    where: new_wallet_claims_bool_exp
  ): [new_wallet_claims!]!

  """
  fetch data from the table: "new_wallet_claims" using primary key columns
  """
  new_wallet_claims_by_pk(id: String!): new_wallet_claims

  """
  fetch data from the table: "nft_token_list"
  """
  nft_token_list(
    """distinct select on columns"""
    distinct_on: [nft_token_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nft_token_list_order_by!]

    """filter the rows returned"""
    where: nft_token_list_bool_exp
  ): [nft_token_list!]!

  """fetch data from the table: "nft_token_list" using primary key columns"""
  nft_token_list_by_pk(id: String!): nft_token_list

  """
  fetch data from the table: "risk_dapps"
  """
  risk_dapps(
    """distinct select on columns"""
    distinct_on: [risk_dapps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [risk_dapps_order_by!]

    """filter the rows returned"""
    where: risk_dapps_bool_exp
  ): [risk_dapps!]!

  """fetch data from the table: "risk_dapps" using primary key columns"""
  risk_dapps_by_pk(id: Int!): risk_dapps

  """
  fetch data from the table: "setting_pebble_menu"
  """
  setting_pebble_menu(
    """distinct select on columns"""
    distinct_on: [setting_pebble_menu_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [setting_pebble_menu_order_by!]

    """filter the rows returned"""
    where: setting_pebble_menu_bool_exp
  ): [setting_pebble_menu!]!

  """
  fetch aggregated fields from the table: "setting_pebble_menu"
  """
  setting_pebble_menu_aggregate(
    """distinct select on columns"""
    distinct_on: [setting_pebble_menu_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [setting_pebble_menu_order_by!]

    """filter the rows returned"""
    where: setting_pebble_menu_bool_exp
  ): setting_pebble_menu_aggregate!

  """
  fetch data from the table: "setting_pebble_menu" using primary key columns
  """
  setting_pebble_menu_by_pk(id: Int!): setting_pebble_menu

  """
  fetch data from the table: "share_link_admin"
  """
  share_link_admin(
    """distinct select on columns"""
    distinct_on: [share_link_admin_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [share_link_admin_order_by!]

    """filter the rows returned"""
    where: share_link_admin_bool_exp
  ): [share_link_admin!]!

  """
  fetch data from the table: "share_link_admin" using primary key columns
  """
  share_link_admin_by_pk(id: Int!): share_link_admin

  """
  fetch data from the table: "signature"
  """
  signature(
    """distinct select on columns"""
    distinct_on: [signature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [signature_order_by!]

    """filter the rows returned"""
    where: signature_bool_exp
  ): [signature!]!

  """fetch data from the table: "signature" using primary key columns"""
  signature_by_pk(id: String!): signature

  """
  fetch data from the table: "smart_stake"
  """
  smart_stake(
    """distinct select on columns"""
    distinct_on: [smart_stake_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [smart_stake_order_by!]

    """filter the rows returned"""
    where: smart_stake_bool_exp
  ): [smart_stake!]!

  """fetch data from the table: "smart_stake" using primary key columns"""
  smart_stake_by_pk(id: String!): smart_stake

  """
  fetch data from the table: "system_msg"
  """
  system_msg(
    """distinct select on columns"""
    distinct_on: [system_msg_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [system_msg_order_by!]

    """filter the rows returned"""
    where: system_msg_bool_exp
  ): [system_msg!]!

  """fetch data from the table: "system_msg" using primary key columns"""
  system_msg_by_pk(id: Int!): system_msg

  """
  fetch data from the table: "system_msg_test"
  """
  system_msg_test(
    """distinct select on columns"""
    distinct_on: [system_msg_test_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [system_msg_test_order_by!]

    """filter the rows returned"""
    where: system_msg_test_bool_exp
  ): [system_msg_test!]!

  """fetch data from the table: "system_msg_test" using primary key columns"""
  system_msg_test_by_pk(id: Int!): system_msg_test

  """
  fetch data from the table: "token_in_dapps"
  """
  token_in_dapps(
    """distinct select on columns"""
    distinct_on: [token_in_dapps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_in_dapps_order_by!]

    """filter the rows returned"""
    where: token_in_dapps_bool_exp
  ): [token_in_dapps!]!

  """fetch data from the table: "token_in_dapps" using primary key columns"""
  token_in_dapps_by_pk(id: Int!): token_in_dapps

  """
  fetch data from the table: "token_list"
  """
  token_list(
    """distinct select on columns"""
    distinct_on: [token_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_order_by!]

    """filter the rows returned"""
    where: token_list_bool_exp
  ): [token_list!]!

  """fetch data from the table: "token_list" using primary key columns"""
  token_list_by_pk(id: String!): token_list

  """
  fetch data from the table: "token_list_v2"
  """
  token_list_v2(
    """distinct select on columns"""
    distinct_on: [token_list_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_v2_order_by!]

    """filter the rows returned"""
    where: token_list_v2_bool_exp
  ): [token_list_v2!]!

  """
  fetch data from the table: "token_list_v3"
  """
  token_list_v3(
    """distinct select on columns"""
    distinct_on: [token_list_v3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_v3_order_by!]

    """filter the rows returned"""
    where: token_list_v3_bool_exp
  ): [token_list_v3!]!

  """
  fetch aggregated fields from the table: "token_list_v3"
  """
  token_list_v3_aggregate(
    """distinct select on columns"""
    distinct_on: [token_list_v3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_v3_order_by!]

    """filter the rows returned"""
    where: token_list_v3_bool_exp
  ): token_list_v3_aggregate!

  """
  fetch data from the table: "token_list_v4"
  """
  token_list_v4(
    """distinct select on columns"""
    distinct_on: [token_list_v4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_v4_order_by!]

    """filter the rows returned"""
    where: token_list_v4_bool_exp
  ): [token_list_v4!]!

  """
  fetch data from the table: "token_risk"
  """
  token_risk(
    """distinct select on columns"""
    distinct_on: [token_risk_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_risk_order_by!]

    """filter the rows returned"""
    where: token_risk_bool_exp
  ): [token_risk!]!

  """fetch data from the table: "token_risk" using primary key columns"""
  token_risk_by_pk(address: String!): token_risk

  """
  fetch data from the table: "version_control_android_2"
  """
  version_control_android_2(
    """distinct select on columns"""
    distinct_on: [version_control_android_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_control_android_2_order_by!]

    """filter the rows returned"""
    where: version_control_android_2_bool_exp
  ): [version_control_android_2!]!

  """
  fetch data from the table: "version_control_android_2" using primary key columns
  """
  version_control_android_2_by_pk(id: bigint!): version_control_android_2

  """
  fetch data from the table: "version_control_ios"
  """
  version_control_ios(
    """distinct select on columns"""
    distinct_on: [version_control_ios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_control_ios_order_by!]

    """filter the rows returned"""
    where: version_control_ios_bool_exp
  ): [version_control_ios!]!

  """
  fetch data from the table: "version_control_ios" using primary key columns
  """
  version_control_ios_by_pk(id: Int!): version_control_ios

  """
  fetch data from the table: "wallet_info"
  """
  wallet_info(
    """distinct select on columns"""
    distinct_on: [wallet_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [wallet_info_order_by!]

    """filter the rows returned"""
    where: wallet_info_bool_exp
  ): [wallet_info!]!

  """fetch data from the table: "wallet_info" using primary key columns"""
  wallet_info_by_pk(id: Int!): wallet_info
}

"""
columns and relationships of "risk_dapps"
"""
type risk_dapps {
  category: String!
  chains: [String!]!
  id: Int!
  name: String!
}

"""
Boolean expression to filter rows from the table "risk_dapps". All fields are combined with a logical 'AND'.
"""
input risk_dapps_bool_exp {
  _and: [risk_dapps_bool_exp!]
  _not: risk_dapps_bool_exp
  _or: [risk_dapps_bool_exp!]
  category: String_comparison_exp
  chains: String_array_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
}

"""Ordering options when selecting data from "risk_dapps"."""
input risk_dapps_order_by {
  category: order_by
  chains: order_by
  id: order_by
  name: order_by
}

"""
select columns of table "risk_dapps"
"""
enum risk_dapps_select_column {
  """column name"""
  category

  """column name"""
  chains

  """column name"""
  id

  """column name"""
  name
}

"""
Streaming cursor of the table "risk_dapps"
"""
input risk_dapps_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: risk_dapps_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input risk_dapps_stream_cursor_value_input {
  category: String
  chains: [String!]
  id: Int
  name: String
}

"""display : total server open/close    menu_display: menu display/hidden"""
type setting_pebble_menu {
  created_at: timestamptz!
  display: Boolean!
  id: Int!
  menu_display: Boolean!
  platform: String!
  updated_at: timestamptz!
}

"""
aggregated selection of "setting_pebble_menu"
"""
type setting_pebble_menu_aggregate {
  aggregate: setting_pebble_menu_aggregate_fields
  nodes: [setting_pebble_menu!]!
}

"""
aggregate fields of "setting_pebble_menu"
"""
type setting_pebble_menu_aggregate_fields {
  avg: setting_pebble_menu_avg_fields
  count(columns: [setting_pebble_menu_select_column!], distinct: Boolean): Int!
  max: setting_pebble_menu_max_fields
  min: setting_pebble_menu_min_fields
  stddev: setting_pebble_menu_stddev_fields
  stddev_pop: setting_pebble_menu_stddev_pop_fields
  stddev_samp: setting_pebble_menu_stddev_samp_fields
  sum: setting_pebble_menu_sum_fields
  var_pop: setting_pebble_menu_var_pop_fields
  var_samp: setting_pebble_menu_var_samp_fields
  variance: setting_pebble_menu_variance_fields
}

"""aggregate avg on columns"""
type setting_pebble_menu_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "setting_pebble_menu". All fields are combined with a logical 'AND'.
"""
input setting_pebble_menu_bool_exp {
  _and: [setting_pebble_menu_bool_exp!]
  _not: setting_pebble_menu_bool_exp
  _or: [setting_pebble_menu_bool_exp!]
  created_at: timestamptz_comparison_exp
  display: Boolean_comparison_exp
  id: Int_comparison_exp
  menu_display: Boolean_comparison_exp
  platform: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""aggregate max on columns"""
type setting_pebble_menu_max_fields {
  created_at: timestamptz
  id: Int
  platform: String
  updated_at: timestamptz
}

"""aggregate min on columns"""
type setting_pebble_menu_min_fields {
  created_at: timestamptz
  id: Int
  platform: String
  updated_at: timestamptz
}

"""Ordering options when selecting data from "setting_pebble_menu"."""
input setting_pebble_menu_order_by {
  created_at: order_by
  display: order_by
  id: order_by
  menu_display: order_by
  platform: order_by
  updated_at: order_by
}

"""
select columns of table "setting_pebble_menu"
"""
enum setting_pebble_menu_select_column {
  """column name"""
  created_at

  """column name"""
  display

  """column name"""
  id

  """column name"""
  menu_display

  """column name"""
  platform

  """column name"""
  updated_at
}

"""aggregate stddev on columns"""
type setting_pebble_menu_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type setting_pebble_menu_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type setting_pebble_menu_stddev_samp_fields {
  id: Float
}

"""
Streaming cursor of the table "setting_pebble_menu"
"""
input setting_pebble_menu_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: setting_pebble_menu_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input setting_pebble_menu_stream_cursor_value_input {
  created_at: timestamptz
  display: Boolean
  id: Int
  menu_display: Boolean
  platform: String
  updated_at: timestamptz
}

"""aggregate sum on columns"""
type setting_pebble_menu_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type setting_pebble_menu_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type setting_pebble_menu_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type setting_pebble_menu_variance_fields {
  id: Float
}

"""
columns and relationships of "share_link_admin"
"""
type share_link_admin {
  created_at: timestamptz
  display: Boolean!
  id: Int!
  updated_at: timestamptz
  url: String!
}

"""
Boolean expression to filter rows from the table "share_link_admin". All fields are combined with a logical 'AND'.
"""
input share_link_admin_bool_exp {
  _and: [share_link_admin_bool_exp!]
  _not: share_link_admin_bool_exp
  _or: [share_link_admin_bool_exp!]
  created_at: timestamptz_comparison_exp
  display: Boolean_comparison_exp
  id: Int_comparison_exp
  updated_at: timestamptz_comparison_exp
  url: String_comparison_exp
}

"""Ordering options when selecting data from "share_link_admin"."""
input share_link_admin_order_by {
  created_at: order_by
  display: order_by
  id: order_by
  updated_at: order_by
  url: order_by
}

"""
select columns of table "share_link_admin"
"""
enum share_link_admin_select_column {
  """column name"""
  created_at

  """column name"""
  display

  """column name"""
  id

  """column name"""
  updated_at

  """column name"""
  url
}

"""
Streaming cursor of the table "share_link_admin"
"""
input share_link_admin_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: share_link_admin_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input share_link_admin_stream_cursor_value_input {
  created_at: timestamptz
  display: Boolean
  id: Int
  updated_at: timestamptz
  url: String
}

"""
columns and relationships of "signature"
"""
type signature {
  en: String
  id: String!
  zh: String
}

"""
Boolean expression to filter rows from the table "signature". All fields are combined with a logical 'AND'.
"""
input signature_bool_exp {
  _and: [signature_bool_exp!]
  _not: signature_bool_exp
  _or: [signature_bool_exp!]
  en: String_comparison_exp
  id: String_comparison_exp
  zh: String_comparison_exp
}

"""Ordering options when selecting data from "signature"."""
input signature_order_by {
  en: order_by
  id: order_by
  zh: order_by
}

"""
select columns of table "signature"
"""
enum signature_select_column {
  """column name"""
  en

  """column name"""
  id

  """column name"""
  zh
}

"""
Streaming cursor of the table "signature"
"""
input signature_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: signature_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input signature_stream_cursor_value_input {
  en: String
  id: String
  zh: String
}

"""
columns and relationships of "smart_stake"
"""
type smart_stake {
  address: String
  apr: numeric
  blendedShare: numeric
  blockRewardPortion: numeric
  dailyElectionRate: numeric
  dailyProdIndex: numeric
  dailyProdRate: numeric
  epochRewardPortion: numeric
  ethAddress: String
  foundationRewardPortion: numeric
  id: String!
  lastUpdated: numeric
  liveVotes: numeric
  longElectionRate: numeric
  longProdIndex: numeric
  longProdRate: numeric
  midElectionRate: numeric
  midProdIndex: numeric
  midProdRate: numeric
  name: String
  netApr: numeric
  operatorAddress: String
  overallStatus: String
  probation: String
  productivity: numeric
  ranking: numeric
  registeredName: String
  rewardAddress: String
  rewardPercentPerDay: numeric
  rewardPlanChanged: String
  risky: String
  serverStatus: String
  shortElectionRate: numeric
  shortProdIndex: numeric
  shortProdRate: numeric
  status: String
  totalWeightedVotes: numeric
  votesPercent: numeric
}

"""
Boolean expression to filter rows from the table "smart_stake". All fields are combined with a logical 'AND'.
"""
input smart_stake_bool_exp {
  _and: [smart_stake_bool_exp!]
  _not: smart_stake_bool_exp
  _or: [smart_stake_bool_exp!]
  address: String_comparison_exp
  apr: numeric_comparison_exp
  blendedShare: numeric_comparison_exp
  blockRewardPortion: numeric_comparison_exp
  dailyElectionRate: numeric_comparison_exp
  dailyProdIndex: numeric_comparison_exp
  dailyProdRate: numeric_comparison_exp
  epochRewardPortion: numeric_comparison_exp
  ethAddress: String_comparison_exp
  foundationRewardPortion: numeric_comparison_exp
  id: String_comparison_exp
  lastUpdated: numeric_comparison_exp
  liveVotes: numeric_comparison_exp
  longElectionRate: numeric_comparison_exp
  longProdIndex: numeric_comparison_exp
  longProdRate: numeric_comparison_exp
  midElectionRate: numeric_comparison_exp
  midProdIndex: numeric_comparison_exp
  midProdRate: numeric_comparison_exp
  name: String_comparison_exp
  netApr: numeric_comparison_exp
  operatorAddress: String_comparison_exp
  overallStatus: String_comparison_exp
  probation: String_comparison_exp
  productivity: numeric_comparison_exp
  ranking: numeric_comparison_exp
  registeredName: String_comparison_exp
  rewardAddress: String_comparison_exp
  rewardPercentPerDay: numeric_comparison_exp
  rewardPlanChanged: String_comparison_exp
  risky: String_comparison_exp
  serverStatus: String_comparison_exp
  shortElectionRate: numeric_comparison_exp
  shortProdIndex: numeric_comparison_exp
  shortProdRate: numeric_comparison_exp
  status: String_comparison_exp
  totalWeightedVotes: numeric_comparison_exp
  votesPercent: numeric_comparison_exp
}

"""Ordering options when selecting data from "smart_stake"."""
input smart_stake_order_by {
  address: order_by
  apr: order_by
  blendedShare: order_by
  blockRewardPortion: order_by
  dailyElectionRate: order_by
  dailyProdIndex: order_by
  dailyProdRate: order_by
  epochRewardPortion: order_by
  ethAddress: order_by
  foundationRewardPortion: order_by
  id: order_by
  lastUpdated: order_by
  liveVotes: order_by
  longElectionRate: order_by
  longProdIndex: order_by
  longProdRate: order_by
  midElectionRate: order_by
  midProdIndex: order_by
  midProdRate: order_by
  name: order_by
  netApr: order_by
  operatorAddress: order_by
  overallStatus: order_by
  probation: order_by
  productivity: order_by
  ranking: order_by
  registeredName: order_by
  rewardAddress: order_by
  rewardPercentPerDay: order_by
  rewardPlanChanged: order_by
  risky: order_by
  serverStatus: order_by
  shortElectionRate: order_by
  shortProdIndex: order_by
  shortProdRate: order_by
  status: order_by
  totalWeightedVotes: order_by
  votesPercent: order_by
}

"""
select columns of table "smart_stake"
"""
enum smart_stake_select_column {
  """column name"""
  address

  """column name"""
  apr

  """column name"""
  blendedShare

  """column name"""
  blockRewardPortion

  """column name"""
  dailyElectionRate

  """column name"""
  dailyProdIndex

  """column name"""
  dailyProdRate

  """column name"""
  epochRewardPortion

  """column name"""
  ethAddress

  """column name"""
  foundationRewardPortion

  """column name"""
  id

  """column name"""
  lastUpdated

  """column name"""
  liveVotes

  """column name"""
  longElectionRate

  """column name"""
  longProdIndex

  """column name"""
  longProdRate

  """column name"""
  midElectionRate

  """column name"""
  midProdIndex

  """column name"""
  midProdRate

  """column name"""
  name

  """column name"""
  netApr

  """column name"""
  operatorAddress

  """column name"""
  overallStatus

  """column name"""
  probation

  """column name"""
  productivity

  """column name"""
  ranking

  """column name"""
  registeredName

  """column name"""
  rewardAddress

  """column name"""
  rewardPercentPerDay

  """column name"""
  rewardPlanChanged

  """column name"""
  risky

  """column name"""
  serverStatus

  """column name"""
  shortElectionRate

  """column name"""
  shortProdIndex

  """column name"""
  shortProdRate

  """column name"""
  status

  """column name"""
  totalWeightedVotes

  """column name"""
  votesPercent
}

"""
Streaming cursor of the table "smart_stake"
"""
input smart_stake_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: smart_stake_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input smart_stake_stream_cursor_value_input {
  address: String
  apr: numeric
  blendedShare: numeric
  blockRewardPortion: numeric
  dailyElectionRate: numeric
  dailyProdIndex: numeric
  dailyProdRate: numeric
  epochRewardPortion: numeric
  ethAddress: String
  foundationRewardPortion: numeric
  id: String
  lastUpdated: numeric
  liveVotes: numeric
  longElectionRate: numeric
  longProdIndex: numeric
  longProdRate: numeric
  midElectionRate: numeric
  midProdIndex: numeric
  midProdRate: numeric
  name: String
  netApr: numeric
  operatorAddress: String
  overallStatus: String
  probation: String
  productivity: numeric
  ranking: numeric
  registeredName: String
  rewardAddress: String
  rewardPercentPerDay: numeric
  rewardPlanChanged: String
  risky: String
  serverStatus: String
  shortElectionRate: numeric
  shortProdIndex: numeric
  shortProdRate: numeric
  status: String
  totalWeightedVotes: numeric
  votesPercent: numeric
}

type subscription_root {
  """
  fetch data from the table: "app_img_cache_update"
  """
  app_img_cache_update(
    """distinct select on columns"""
    distinct_on: [app_img_cache_update_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [app_img_cache_update_order_by!]

    """filter the rows returned"""
    where: app_img_cache_update_bool_exp
  ): [app_img_cache_update!]!

  """
  fetch data from the table: "app_img_cache_update" using primary key columns
  """
  app_img_cache_update_by_pk(id: bigint!): app_img_cache_update

  """
  fetch data from the table in a streaming manner: "app_img_cache_update"
  """
  app_img_cache_update_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [app_img_cache_update_stream_cursor_input]!

    """filter the rows returned"""
    where: app_img_cache_update_bool_exp
  ): [app_img_cache_update!]!

  """
  fetch data from the table: "buy_iotex"
  """
  buy_iotex(
    """distinct select on columns"""
    distinct_on: [buy_iotex_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [buy_iotex_order_by!]

    """filter the rows returned"""
    where: buy_iotex_bool_exp
  ): [buy_iotex!]!

  """fetch data from the table: "buy_iotex" using primary key columns"""
  buy_iotex_by_pk(id: Int!): buy_iotex

  """
  fetch data from the table in a streaming manner: "buy_iotex"
  """
  buy_iotex_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [buy_iotex_stream_cursor_input]!

    """filter the rows returned"""
    where: buy_iotex_bool_exp
  ): [buy_iotex!]!

  """
  fetch data from the table: "campaign_labels"
  """
  campaign_labels(
    """distinct select on columns"""
    distinct_on: [campaign_labels_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [campaign_labels_order_by!]

    """filter the rows returned"""
    where: campaign_labels_bool_exp
  ): [campaign_labels!]!

  """fetch data from the table: "campaign_labels" using primary key columns"""
  campaign_labels_by_pk(id: Int!): campaign_labels

  """
  fetch data from the table in a streaming manner: "campaign_labels"
  """
  campaign_labels_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [campaign_labels_stream_cursor_input]!

    """filter the rows returned"""
    where: campaign_labels_bool_exp
  ): [campaign_labels!]!

  """
  fetch data from the table: "campaign_list"
  """
  campaign_list(
    """distinct select on columns"""
    distinct_on: [campaign_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [campaign_list_order_by!]

    """filter the rows returned"""
    where: campaign_list_bool_exp
  ): [campaign_list!]!

  """fetch data from the table: "campaign_list" using primary key columns"""
  campaign_list_by_pk(id: Int!): campaign_list

  """
  fetch data from the table in a streaming manner: "campaign_list"
  """
  campaign_list_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [campaign_list_stream_cursor_input]!

    """filter the rows returned"""
    where: campaign_list_bool_exp
  ): [campaign_list!]!

  """
  fetch data from the table: "certified_contract"
  """
  certified_contract(
    """distinct select on columns"""
    distinct_on: [certified_contract_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [certified_contract_order_by!]

    """filter the rows returned"""
    where: certified_contract_bool_exp
  ): [certified_contract!]!

  """
  fetch data from the table: "certified_contract" using primary key columns
  """
  certified_contract_by_pk(id: Int!): certified_contract

  """
  fetch data from the table in a streaming manner: "certified_contract"
  """
  certified_contract_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [certified_contract_stream_cursor_input]!

    """filter the rows returned"""
    where: certified_contract_bool_exp
  ): [certified_contract!]!

  """
  fetch data from the table: "coingecko_coin_detail"
  """
  coingecko_coin_detail(
    """distinct select on columns"""
    distinct_on: [coingecko_coin_detail_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [coingecko_coin_detail_order_by!]

    """filter the rows returned"""
    where: coingecko_coin_detail_bool_exp
  ): [coingecko_coin_detail!]!

  """
  fetch data from the table: "coingecko_coin_detail" using primary key columns
  """
  coingecko_coin_detail_by_pk(id: String!): coingecko_coin_detail

  """
  fetch data from the table in a streaming manner: "coingecko_coin_detail"
  """
  coingecko_coin_detail_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [coingecko_coin_detail_stream_cursor_input]!

    """filter the rows returned"""
    where: coingecko_coin_detail_bool_exp
  ): [coingecko_coin_detail!]!

  """
  fetch data from the table: "coingeko_market"
  """
  coingeko_market(
    """distinct select on columns"""
    distinct_on: [coingeko_market_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [coingeko_market_order_by!]

    """filter the rows returned"""
    where: coingeko_market_bool_exp
  ): [coingeko_market!]!

  """fetch data from the table: "coingeko_market" using primary key columns"""
  coingeko_market_by_pk(id: String!): coingeko_market

  """
  fetch data from the table in a streaming manner: "coingeko_market"
  """
  coingeko_market_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [coingeko_market_stream_cursor_input]!

    """filter the rows returned"""
    where: coingeko_market_bool_exp
  ): [coingeko_market!]!

  """
  fetch data from the table: "contract_error_msg"
  """
  contract_error_msg(
    """distinct select on columns"""
    distinct_on: [contract_error_msg_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_error_msg_order_by!]

    """filter the rows returned"""
    where: contract_error_msg_bool_exp
  ): [contract_error_msg!]!

  """
  fetch data from the table: "contract_error_msg" using primary key columns
  """
  contract_error_msg_by_pk(id: Int!): contract_error_msg

  """
  fetch data from the table in a streaming manner: "contract_error_msg"
  """
  contract_error_msg_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [contract_error_msg_stream_cursor_input]!

    """filter the rows returned"""
    where: contract_error_msg_bool_exp
  ): [contract_error_msg!]!

  """
  fetch data from the table: "dapp_category"
  """
  dapp_category(
    """distinct select on columns"""
    distinct_on: [dapp_category_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_category_order_by!]

    """filter the rows returned"""
    where: dapp_category_bool_exp
  ): [dapp_category!]!

  """
  fetch data from the table: "dapp_category_banner"
  """
  dapp_category_banner(
    """distinct select on columns"""
    distinct_on: [dapp_category_banner_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_category_banner_order_by!]

    """filter the rows returned"""
    where: dapp_category_banner_bool_exp
  ): [dapp_category_banner!]!

  """
  fetch data from the table: "dapp_category_banner" using primary key columns
  """
  dapp_category_banner_by_pk(link: String!): dapp_category_banner

  """
  fetch data from the table in a streaming manner: "dapp_category_banner"
  """
  dapp_category_banner_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dapp_category_banner_stream_cursor_input]!

    """filter the rows returned"""
    where: dapp_category_banner_bool_exp
  ): [dapp_category_banner!]!

  """fetch data from the table: "dapp_category" using primary key columns"""
  dapp_category_by_pk(id: bigint!): dapp_category

  """
  fetch data from the table in a streaming manner: "dapp_category"
  """
  dapp_category_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dapp_category_stream_cursor_input]!

    """filter the rows returned"""
    where: dapp_category_bool_exp
  ): [dapp_category!]!

  """
  fetch data from the table: "dapp_list"
  """
  dapp_list(
    """distinct select on columns"""
    distinct_on: [dapp_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_order_by!]

    """filter the rows returned"""
    where: dapp_list_bool_exp
  ): [dapp_list!]!

  """fetch data from the table: "dapp_list" using primary key columns"""
  dapp_list_by_pk(id: String!): dapp_list

  """
  fetch data from the table: "dapp_list_latest"
  """
  dapp_list_latest(
    """distinct select on columns"""
    distinct_on: [dapp_list_latest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_latest_order_by!]

    """filter the rows returned"""
    where: dapp_list_latest_bool_exp
  ): [dapp_list_latest!]!

  """
  fetch data from the table: "dapp_list_latest" using primary key columns
  """
  dapp_list_latest_by_pk(id: Int!): dapp_list_latest

  """
  fetch data from the table in a streaming manner: "dapp_list_latest"
  """
  dapp_list_latest_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dapp_list_latest_stream_cursor_input]!

    """filter the rows returned"""
    where: dapp_list_latest_bool_exp
  ): [dapp_list_latest!]!

  """
  fetch data from the table: "dapp_list_latest_v2"
  """
  dapp_list_latest_v2(
    """distinct select on columns"""
    distinct_on: [dapp_list_latest_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_latest_v2_order_by!]

    """filter the rows returned"""
    where: dapp_list_latest_v2_bool_exp
  ): [dapp_list_latest_v2!]!

  """
  fetch aggregated fields from the table: "dapp_list_latest_v2"
  """
  dapp_list_latest_v2_aggregate(
    """distinct select on columns"""
    distinct_on: [dapp_list_latest_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_latest_v2_order_by!]

    """filter the rows returned"""
    where: dapp_list_latest_v2_bool_exp
  ): dapp_list_latest_v2_aggregate!

  """
  fetch data from the table: "dapp_list_latest_v2" using primary key columns
  """
  dapp_list_latest_v2_by_pk(id: Int!): dapp_list_latest_v2

  """
  fetch data from the table in a streaming manner: "dapp_list_latest_v2"
  """
  dapp_list_latest_v2_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dapp_list_latest_v2_stream_cursor_input]!

    """filter the rows returned"""
    where: dapp_list_latest_v2_bool_exp
  ): [dapp_list_latest_v2!]!

  """
  fetch data from the table in a streaming manner: "dapp_list"
  """
  dapp_list_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dapp_list_stream_cursor_input]!

    """filter the rows returned"""
    where: dapp_list_bool_exp
  ): [dapp_list!]!

  """
  fetch data from the table: "dapp_list_v3"
  """
  dapp_list_v3(
    """distinct select on columns"""
    distinct_on: [dapp_list_v3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_v3_order_by!]

    """filter the rows returned"""
    where: dapp_list_v3_bool_exp
  ): [dapp_list_v3!]!

  """fetch data from the table: "dapp_list_v3" using primary key columns"""
  dapp_list_v3_by_pk(id: String!): dapp_list_v3

  """
  fetch data from the table in a streaming manner: "dapp_list_v3"
  """
  dapp_list_v3_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dapp_list_v3_stream_cursor_input]!

    """filter the rows returned"""
    where: dapp_list_v3_bool_exp
  ): [dapp_list_v3!]!

  """
  fetch data from the table: "dapp_list_v4"
  """
  dapp_list_v4(
    """distinct select on columns"""
    distinct_on: [dapp_list_v4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_v4_order_by!]

    """filter the rows returned"""
    where: dapp_list_v4_bool_exp
  ): [dapp_list_v4!]!

  """fetch data from the table: "dapp_list_v4" using primary key columns"""
  dapp_list_v4_by_pk(id: String!): dapp_list_v4

  """
  fetch data from the table in a streaming manner: "dapp_list_v4"
  """
  dapp_list_v4_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dapp_list_v4_stream_cursor_input]!

    """filter the rows returned"""
    where: dapp_list_v4_bool_exp
  ): [dapp_list_v4!]!

  """
  fetch data from the table: "dapp_list_v5"
  """
  dapp_list_v5(
    """distinct select on columns"""
    distinct_on: [dapp_list_v5_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_v5_order_by!]

    """filter the rows returned"""
    where: dapp_list_v5_bool_exp
  ): [dapp_list_v5!]!

  """fetch data from the table: "dapp_list_v5" using primary key columns"""
  dapp_list_v5_by_pk(id: String!): dapp_list_v5

  """
  fetch data from the table in a streaming manner: "dapp_list_v5"
  """
  dapp_list_v5_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dapp_list_v5_stream_cursor_input]!

    """filter the rows returned"""
    where: dapp_list_v5_bool_exp
  ): [dapp_list_v5!]!

  """
  fetch data from the table: "dapp_promote"
  """
  dapp_promote(
    """distinct select on columns"""
    distinct_on: [dapp_promote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_promote_order_by!]

    """filter the rows returned"""
    where: dapp_promote_bool_exp
  ): [dapp_promote!]!

  """fetch data from the table: "dapp_promote" using primary key columns"""
  dapp_promote_by_pk(id: String!): dapp_promote

  """
  fetch data from the table in a streaming manner: "dapp_promote"
  """
  dapp_promote_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dapp_promote_stream_cursor_input]!

    """filter the rows returned"""
    where: dapp_promote_bool_exp
  ): [dapp_promote!]!

  """
  fetch data from the table: "discovery_banner"
  """
  discovery_banner(
    """distinct select on columns"""
    distinct_on: [discovery_banner_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [discovery_banner_order_by!]

    """filter the rows returned"""
    where: discovery_banner_bool_exp
  ): [discovery_banner!]!

  """
  fetch data from the table: "discovery_banner" using primary key columns
  """
  discovery_banner_by_pk(id: Int!): discovery_banner

  """
  fetch data from the table in a streaming manner: "discovery_banner"
  """
  discovery_banner_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [discovery_banner_stream_cursor_input]!

    """filter the rows returned"""
    where: discovery_banner_bool_exp
  ): [discovery_banner!]!

  """
  fetch data from the table: "home_news_banners"
  """
  home_news_banners(
    """distinct select on columns"""
    distinct_on: [home_news_banners_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [home_news_banners_order_by!]

    """filter the rows returned"""
    where: home_news_banners_bool_exp
  ): [home_news_banners!]!

  """
  fetch data from the table: "home_news_banners" using primary key columns
  """
  home_news_banners_by_pk(id: Int!): home_news_banners

  """
  fetch data from the table in a streaming manner: "home_news_banners"
  """
  home_news_banners_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [home_news_banners_stream_cursor_input]!

    """filter the rows returned"""
    where: home_news_banners_bool_exp
  ): [home_news_banners!]!

  """
  fetch data from the table: "home_news_banners_test"
  """
  home_news_banners_test(
    """distinct select on columns"""
    distinct_on: [home_news_banners_test_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [home_news_banners_test_order_by!]

    """filter the rows returned"""
    where: home_news_banners_test_bool_exp
  ): [home_news_banners_test!]!

  """
  fetch data from the table: "home_news_banners_test" using primary key columns
  """
  home_news_banners_test_by_pk(id: Int!): home_news_banners_test

  """
  fetch data from the table in a streaming manner: "home_news_banners_test"
  """
  home_news_banners_test_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [home_news_banners_test_stream_cursor_input]!

    """filter the rows returned"""
    where: home_news_banners_test_bool_exp
  ): [home_news_banners_test!]!

  """
  fetch data from the table: "home_post_event"
  """
  home_post_event(
    """distinct select on columns"""
    distinct_on: [home_post_event_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [home_post_event_order_by!]

    """filter the rows returned"""
    where: home_post_event_bool_exp
  ): [home_post_event!]!

  """fetch data from the table: "home_post_event" using primary key columns"""
  home_post_event_by_pk(id: Int!): home_post_event

  """
  fetch data from the table in a streaming manner: "home_post_event"
  """
  home_post_event_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [home_post_event_stream_cursor_input]!

    """filter the rows returned"""
    where: home_post_event_bool_exp
  ): [home_post_event!]!

  """
  fetch data from the table: "iip13_bucket_type_ignore"
  """
  iip13_bucket_type_ignore(
    """distinct select on columns"""
    distinct_on: [iip13_bucket_type_ignore_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iip13_bucket_type_ignore_order_by!]

    """filter the rows returned"""
    where: iip13_bucket_type_ignore_bool_exp
  ): [iip13_bucket_type_ignore!]!

  """
  fetch data from the table: "iip13_bucket_type_ignore" using primary key columns
  """
  iip13_bucket_type_ignore_by_pk(id: Int!): iip13_bucket_type_ignore

  """
  fetch data from the table in a streaming manner: "iip13_bucket_type_ignore"
  """
  iip13_bucket_type_ignore_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [iip13_bucket_type_ignore_stream_cursor_input]!

    """filter the rows returned"""
    where: iip13_bucket_type_ignore_bool_exp
  ): [iip13_bucket_type_ignore!]!

  """
  fetch data from the table: "iopay_device_config"
  """
  iopay_device_config(
    """distinct select on columns"""
    distinct_on: [iopay_device_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_device_config_order_by!]

    """filter the rows returned"""
    where: iopay_device_config_bool_exp
  ): [iopay_device_config!]!

  """
  fetch data from the table: "iopay_device_config" using primary key columns
  """
  iopay_device_config_by_pk(deviceToken: String!): iopay_device_config

  """
  fetch data from the table in a streaming manner: "iopay_device_config"
  """
  iopay_device_config_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [iopay_device_config_stream_cursor_input]!

    """filter the rows returned"""
    where: iopay_device_config_bool_exp
  ): [iopay_device_config!]!

  """
  fetch data from the table: "iopay_earning_banner"
  """
  iopay_earning_banner(
    """distinct select on columns"""
    distinct_on: [iopay_earning_banner_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_earning_banner_order_by!]

    """filter the rows returned"""
    where: iopay_earning_banner_bool_exp
  ): [iopay_earning_banner!]!

  """
  fetch data from the table: "iopay_earning_banner" using primary key columns
  """
  iopay_earning_banner_by_pk(id: Int!): iopay_earning_banner

  """
  fetch data from the table in a streaming manner: "iopay_earning_banner"
  """
  iopay_earning_banner_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [iopay_earning_banner_stream_cursor_input]!

    """filter the rows returned"""
    where: iopay_earning_banner_bool_exp
  ): [iopay_earning_banner!]!

  """
  fetch data from the table: "iopay_earning_list"
  """
  iopay_earning_list(
    """distinct select on columns"""
    distinct_on: [iopay_earning_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_earning_list_order_by!]

    """filter the rows returned"""
    where: iopay_earning_list_bool_exp
  ): [iopay_earning_list!]!

  """
  fetch data from the table: "iopay_earning_list" using primary key columns
  """
  iopay_earning_list_by_pk(id: Int!): iopay_earning_list

  """
  fetch data from the table in a streaming manner: "iopay_earning_list"
  """
  iopay_earning_list_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [iopay_earning_list_stream_cursor_input]!

    """filter the rows returned"""
    where: iopay_earning_list_bool_exp
  ): [iopay_earning_list!]!

  """
  fetch data from the table: "iopay_wallet_models"
  """
  iopay_wallet_models(
    """distinct select on columns"""
    distinct_on: [iopay_wallet_models_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_wallet_models_order_by!]

    """filter the rows returned"""
    where: iopay_wallet_models_bool_exp
  ): [iopay_wallet_models!]!

  """
  fetch data from the table: "iopay_wallet_models" using primary key columns
  """
  iopay_wallet_models_by_pk(id: String!): iopay_wallet_models

  """
  fetch data from the table in a streaming manner: "iopay_wallet_models"
  """
  iopay_wallet_models_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [iopay_wallet_models_stream_cursor_input]!

    """filter the rows returned"""
    where: iopay_wallet_models_bool_exp
  ): [iopay_wallet_models!]!

  """
  fetch data from the table: "iopay_wallet_models_test2"
  """
  iopay_wallet_models_test2(
    """distinct select on columns"""
    distinct_on: [iopay_wallet_models_test2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [iopay_wallet_models_test2_order_by!]

    """filter the rows returned"""
    where: iopay_wallet_models_test2_bool_exp
  ): [iopay_wallet_models_test2!]!

  """
  fetch data from the table: "iopay_wallet_models_test2" using primary key columns
  """
  iopay_wallet_models_test2_by_pk(id: String!): iopay_wallet_models_test2

  """
  fetch data from the table in a streaming manner: "iopay_wallet_models_test2"
  """
  iopay_wallet_models_test2_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [iopay_wallet_models_test2_stream_cursor_input]!

    """filter the rows returned"""
    where: iopay_wallet_models_test2_bool_exp
  ): [iopay_wallet_models_test2!]!

  """
  fetch data from the table: "media"
  """
  media(
    """distinct select on columns"""
    distinct_on: [media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_order_by!]

    """filter the rows returned"""
    where: media_bool_exp
  ): [media!]!

  """fetch data from the table: "media" using primary key columns"""
  media_by_pk(id: String!): media

  """
  fetch data from the table in a streaming manner: "media"
  """
  media_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [media_stream_cursor_input]!

    """filter the rows returned"""
    where: media_bool_exp
  ): [media!]!

  """
  fetch data from the table: "metaPebble.pebble_contract"
  """
  metaPebble_pebble_contract(
    """distinct select on columns"""
    distinct_on: [metaPebble_pebble_contract_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metaPebble_pebble_contract_order_by!]

    """filter the rows returned"""
    where: metaPebble_pebble_contract_bool_exp
  ): [metaPebble_pebble_contract!]!

  """
  fetch data from the table: "metaPebble.pebble_contract" using primary key columns
  """
  metaPebble_pebble_contract_by_pk(address: String!): metaPebble_pebble_contract

  """
  fetch data from the table: "metaPebble.pebble_contract_mainnet"
  """
  metaPebble_pebble_contract_mainnet(
    """distinct select on columns"""
    distinct_on: [metaPebble_pebble_contract_mainnet_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metaPebble_pebble_contract_mainnet_order_by!]

    """filter the rows returned"""
    where: metaPebble_pebble_contract_mainnet_bool_exp
  ): [metaPebble_pebble_contract_mainnet!]!

  """
  fetch data from the table: "metaPebble.pebble_contract_mainnet" using primary key columns
  """
  metaPebble_pebble_contract_mainnet_by_pk(name: String!): metaPebble_pebble_contract_mainnet

  """
  fetch data from the table in a streaming manner: "metaPebble.pebble_contract_mainnet"
  """
  metaPebble_pebble_contract_mainnet_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [metaPebble_pebble_contract_mainnet_stream_cursor_input]!

    """filter the rows returned"""
    where: metaPebble_pebble_contract_mainnet_bool_exp
  ): [metaPebble_pebble_contract_mainnet!]!

  """
  fetch data from the table in a streaming manner: "metaPebble.pebble_contract"
  """
  metaPebble_pebble_contract_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [metaPebble_pebble_contract_stream_cursor_input]!

    """filter the rows returned"""
    where: metaPebble_pebble_contract_bool_exp
  ): [metaPebble_pebble_contract!]!

  """
  fetch data from the table: "metaPebble.version_android"
  """
  metaPebble_version_android(
    """distinct select on columns"""
    distinct_on: [metaPebble_version_android_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metaPebble_version_android_order_by!]

    """filter the rows returned"""
    where: metaPebble_version_android_bool_exp
  ): [metaPebble_version_android!]!

  """
  fetch data from the table: "metaPebble.version_android" using primary key columns
  """
  metaPebble_version_android_by_pk(id: Int!): metaPebble_version_android

  """
  fetch data from the table in a streaming manner: "metaPebble.version_android"
  """
  metaPebble_version_android_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [metaPebble_version_android_stream_cursor_input]!

    """filter the rows returned"""
    where: metaPebble_version_android_bool_exp
  ): [metaPebble_version_android!]!

  """
  fetch data from the table: "metaPebble.version_ios"
  """
  metaPebble_version_ios(
    """distinct select on columns"""
    distinct_on: [metaPebble_version_ios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [metaPebble_version_ios_order_by!]

    """filter the rows returned"""
    where: metaPebble_version_ios_bool_exp
  ): [metaPebble_version_ios!]!

  """
  fetch data from the table: "metaPebble.version_ios" using primary key columns
  """
  metaPebble_version_ios_by_pk(url: String!): metaPebble_version_ios

  """
  fetch data from the table in a streaming manner: "metaPebble.version_ios"
  """
  metaPebble_version_ios_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [metaPebble_version_ios_stream_cursor_input]!

    """filter the rows returned"""
    where: metaPebble_version_ios_bool_exp
  ): [metaPebble_version_ios!]!

  """
  fetch data from the table: "network_aa_config"
  """
  network_aa_config(
    """distinct select on columns"""
    distinct_on: [network_aa_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_aa_config_order_by!]

    """filter the rows returned"""
    where: network_aa_config_bool_exp
  ): [network_aa_config!]!

  """
  fetch data from the table: "network_aa_config" using primary key columns
  """
  network_aa_config_by_pk(chain_id: Int!): network_aa_config

  """
  fetch data from the table in a streaming manner: "network_aa_config"
  """
  network_aa_config_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [network_aa_config_stream_cursor_input]!

    """filter the rows returned"""
    where: network_aa_config_bool_exp
  ): [network_aa_config!]!

  """
  fetch data from the table: "network_chain_theme"
  """
  network_chain_theme(
    """distinct select on columns"""
    distinct_on: [network_chain_theme_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_chain_theme_order_by!]

    """filter the rows returned"""
    where: network_chain_theme_bool_exp
  ): [network_chain_theme!]!

  """
  fetch data from the table: "network_chain_theme" using primary key columns
  """
  network_chain_theme_by_pk(chain_id: Int!): network_chain_theme

  """
  fetch data from the table in a streaming manner: "network_chain_theme"
  """
  network_chain_theme_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [network_chain_theme_stream_cursor_input]!

    """filter the rows returned"""
    where: network_chain_theme_bool_exp
  ): [network_chain_theme!]!

  """
  fetch data from the table: "network_config"
  """
  network_config(
    """distinct select on columns"""
    distinct_on: [network_config_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_config_order_by!]

    """filter the rows returned"""
    where: network_config_bool_exp
  ): [network_config!]!

  """fetch data from the table: "network_config" using primary key columns"""
  network_config_by_pk(chain_id: Int!): network_config

  """
  fetch data from the table in a streaming manner: "network_config"
  """
  network_config_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [network_config_stream_cursor_input]!

    """filter the rows returned"""
    where: network_config_bool_exp
  ): [network_config!]!

  """
  fetch data from the table: "network_list"
  """
  network_list(
    """distinct select on columns"""
    distinct_on: [network_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_list_order_by!]

    """filter the rows returned"""
    where: network_list_bool_exp
  ): [network_list!]!

  """
  fetch aggregated fields from the table: "network_list"
  """
  network_list_aggregate(
    """distinct select on columns"""
    distinct_on: [network_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [network_list_order_by!]

    """filter the rows returned"""
    where: network_list_bool_exp
  ): network_list_aggregate!

  """fetch data from the table: "network_list" using primary key columns"""
  network_list_by_pk(id: Int!): network_list

  """
  fetch data from the table in a streaming manner: "network_list"
  """
  network_list_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [network_list_stream_cursor_input]!

    """filter the rows returned"""
    where: network_list_bool_exp
  ): [network_list!]!

  """
  fetch data from the table: "new_wallet_claims"
  """
  new_wallet_claims(
    """distinct select on columns"""
    distinct_on: [new_wallet_claims_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [new_wallet_claims_order_by!]

    """filter the rows returned"""
    where: new_wallet_claims_bool_exp
  ): [new_wallet_claims!]!

  """
  fetch data from the table: "new_wallet_claims" using primary key columns
  """
  new_wallet_claims_by_pk(id: String!): new_wallet_claims

  """
  fetch data from the table in a streaming manner: "new_wallet_claims"
  """
  new_wallet_claims_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [new_wallet_claims_stream_cursor_input]!

    """filter the rows returned"""
    where: new_wallet_claims_bool_exp
  ): [new_wallet_claims!]!

  """
  fetch data from the table: "nft_token_list"
  """
  nft_token_list(
    """distinct select on columns"""
    distinct_on: [nft_token_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [nft_token_list_order_by!]

    """filter the rows returned"""
    where: nft_token_list_bool_exp
  ): [nft_token_list!]!

  """fetch data from the table: "nft_token_list" using primary key columns"""
  nft_token_list_by_pk(id: String!): nft_token_list

  """
  fetch data from the table in a streaming manner: "nft_token_list"
  """
  nft_token_list_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [nft_token_list_stream_cursor_input]!

    """filter the rows returned"""
    where: nft_token_list_bool_exp
  ): [nft_token_list!]!

  """
  fetch data from the table: "risk_dapps"
  """
  risk_dapps(
    """distinct select on columns"""
    distinct_on: [risk_dapps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [risk_dapps_order_by!]

    """filter the rows returned"""
    where: risk_dapps_bool_exp
  ): [risk_dapps!]!

  """fetch data from the table: "risk_dapps" using primary key columns"""
  risk_dapps_by_pk(id: Int!): risk_dapps

  """
  fetch data from the table in a streaming manner: "risk_dapps"
  """
  risk_dapps_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [risk_dapps_stream_cursor_input]!

    """filter the rows returned"""
    where: risk_dapps_bool_exp
  ): [risk_dapps!]!

  """
  fetch data from the table: "setting_pebble_menu"
  """
  setting_pebble_menu(
    """distinct select on columns"""
    distinct_on: [setting_pebble_menu_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [setting_pebble_menu_order_by!]

    """filter the rows returned"""
    where: setting_pebble_menu_bool_exp
  ): [setting_pebble_menu!]!

  """
  fetch aggregated fields from the table: "setting_pebble_menu"
  """
  setting_pebble_menu_aggregate(
    """distinct select on columns"""
    distinct_on: [setting_pebble_menu_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [setting_pebble_menu_order_by!]

    """filter the rows returned"""
    where: setting_pebble_menu_bool_exp
  ): setting_pebble_menu_aggregate!

  """
  fetch data from the table: "setting_pebble_menu" using primary key columns
  """
  setting_pebble_menu_by_pk(id: Int!): setting_pebble_menu

  """
  fetch data from the table in a streaming manner: "setting_pebble_menu"
  """
  setting_pebble_menu_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [setting_pebble_menu_stream_cursor_input]!

    """filter the rows returned"""
    where: setting_pebble_menu_bool_exp
  ): [setting_pebble_menu!]!

  """
  fetch data from the table: "share_link_admin"
  """
  share_link_admin(
    """distinct select on columns"""
    distinct_on: [share_link_admin_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [share_link_admin_order_by!]

    """filter the rows returned"""
    where: share_link_admin_bool_exp
  ): [share_link_admin!]!

  """
  fetch data from the table: "share_link_admin" using primary key columns
  """
  share_link_admin_by_pk(id: Int!): share_link_admin

  """
  fetch data from the table in a streaming manner: "share_link_admin"
  """
  share_link_admin_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [share_link_admin_stream_cursor_input]!

    """filter the rows returned"""
    where: share_link_admin_bool_exp
  ): [share_link_admin!]!

  """
  fetch data from the table: "signature"
  """
  signature(
    """distinct select on columns"""
    distinct_on: [signature_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [signature_order_by!]

    """filter the rows returned"""
    where: signature_bool_exp
  ): [signature!]!

  """fetch data from the table: "signature" using primary key columns"""
  signature_by_pk(id: String!): signature

  """
  fetch data from the table in a streaming manner: "signature"
  """
  signature_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [signature_stream_cursor_input]!

    """filter the rows returned"""
    where: signature_bool_exp
  ): [signature!]!

  """
  fetch data from the table: "smart_stake"
  """
  smart_stake(
    """distinct select on columns"""
    distinct_on: [smart_stake_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [smart_stake_order_by!]

    """filter the rows returned"""
    where: smart_stake_bool_exp
  ): [smart_stake!]!

  """fetch data from the table: "smart_stake" using primary key columns"""
  smart_stake_by_pk(id: String!): smart_stake

  """
  fetch data from the table in a streaming manner: "smart_stake"
  """
  smart_stake_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [smart_stake_stream_cursor_input]!

    """filter the rows returned"""
    where: smart_stake_bool_exp
  ): [smart_stake!]!

  """
  fetch data from the table: "system_msg"
  """
  system_msg(
    """distinct select on columns"""
    distinct_on: [system_msg_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [system_msg_order_by!]

    """filter the rows returned"""
    where: system_msg_bool_exp
  ): [system_msg!]!

  """fetch data from the table: "system_msg" using primary key columns"""
  system_msg_by_pk(id: Int!): system_msg

  """
  fetch data from the table in a streaming manner: "system_msg"
  """
  system_msg_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [system_msg_stream_cursor_input]!

    """filter the rows returned"""
    where: system_msg_bool_exp
  ): [system_msg!]!

  """
  fetch data from the table: "system_msg_test"
  """
  system_msg_test(
    """distinct select on columns"""
    distinct_on: [system_msg_test_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [system_msg_test_order_by!]

    """filter the rows returned"""
    where: system_msg_test_bool_exp
  ): [system_msg_test!]!

  """fetch data from the table: "system_msg_test" using primary key columns"""
  system_msg_test_by_pk(id: Int!): system_msg_test

  """
  fetch data from the table in a streaming manner: "system_msg_test"
  """
  system_msg_test_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [system_msg_test_stream_cursor_input]!

    """filter the rows returned"""
    where: system_msg_test_bool_exp
  ): [system_msg_test!]!

  """
  fetch data from the table: "token_in_dapps"
  """
  token_in_dapps(
    """distinct select on columns"""
    distinct_on: [token_in_dapps_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_in_dapps_order_by!]

    """filter the rows returned"""
    where: token_in_dapps_bool_exp
  ): [token_in_dapps!]!

  """fetch data from the table: "token_in_dapps" using primary key columns"""
  token_in_dapps_by_pk(id: Int!): token_in_dapps

  """
  fetch data from the table in a streaming manner: "token_in_dapps"
  """
  token_in_dapps_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [token_in_dapps_stream_cursor_input]!

    """filter the rows returned"""
    where: token_in_dapps_bool_exp
  ): [token_in_dapps!]!

  """
  fetch data from the table: "token_list"
  """
  token_list(
    """distinct select on columns"""
    distinct_on: [token_list_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_order_by!]

    """filter the rows returned"""
    where: token_list_bool_exp
  ): [token_list!]!

  """fetch data from the table: "token_list" using primary key columns"""
  token_list_by_pk(id: String!): token_list

  """
  fetch data from the table in a streaming manner: "token_list"
  """
  token_list_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [token_list_stream_cursor_input]!

    """filter the rows returned"""
    where: token_list_bool_exp
  ): [token_list!]!

  """
  fetch data from the table: "token_list_v2"
  """
  token_list_v2(
    """distinct select on columns"""
    distinct_on: [token_list_v2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_v2_order_by!]

    """filter the rows returned"""
    where: token_list_v2_bool_exp
  ): [token_list_v2!]!

  """
  fetch data from the table in a streaming manner: "token_list_v2"
  """
  token_list_v2_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [token_list_v2_stream_cursor_input]!

    """filter the rows returned"""
    where: token_list_v2_bool_exp
  ): [token_list_v2!]!

  """
  fetch data from the table: "token_list_v3"
  """
  token_list_v3(
    """distinct select on columns"""
    distinct_on: [token_list_v3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_v3_order_by!]

    """filter the rows returned"""
    where: token_list_v3_bool_exp
  ): [token_list_v3!]!

  """
  fetch aggregated fields from the table: "token_list_v3"
  """
  token_list_v3_aggregate(
    """distinct select on columns"""
    distinct_on: [token_list_v3_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_v3_order_by!]

    """filter the rows returned"""
    where: token_list_v3_bool_exp
  ): token_list_v3_aggregate!

  """
  fetch data from the table in a streaming manner: "token_list_v3"
  """
  token_list_v3_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [token_list_v3_stream_cursor_input]!

    """filter the rows returned"""
    where: token_list_v3_bool_exp
  ): [token_list_v3!]!

  """
  fetch data from the table: "token_list_v4"
  """
  token_list_v4(
    """distinct select on columns"""
    distinct_on: [token_list_v4_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_list_v4_order_by!]

    """filter the rows returned"""
    where: token_list_v4_bool_exp
  ): [token_list_v4!]!

  """
  fetch data from the table in a streaming manner: "token_list_v4"
  """
  token_list_v4_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [token_list_v4_stream_cursor_input]!

    """filter the rows returned"""
    where: token_list_v4_bool_exp
  ): [token_list_v4!]!

  """
  fetch data from the table: "token_risk"
  """
  token_risk(
    """distinct select on columns"""
    distinct_on: [token_risk_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_risk_order_by!]

    """filter the rows returned"""
    where: token_risk_bool_exp
  ): [token_risk!]!

  """fetch data from the table: "token_risk" using primary key columns"""
  token_risk_by_pk(address: String!): token_risk

  """
  fetch data from the table in a streaming manner: "token_risk"
  """
  token_risk_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [token_risk_stream_cursor_input]!

    """filter the rows returned"""
    where: token_risk_bool_exp
  ): [token_risk!]!

  """
  fetch data from the table: "version_control_android_2"
  """
  version_control_android_2(
    """distinct select on columns"""
    distinct_on: [version_control_android_2_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_control_android_2_order_by!]

    """filter the rows returned"""
    where: version_control_android_2_bool_exp
  ): [version_control_android_2!]!

  """
  fetch data from the table: "version_control_android_2" using primary key columns
  """
  version_control_android_2_by_pk(id: bigint!): version_control_android_2

  """
  fetch data from the table in a streaming manner: "version_control_android_2"
  """
  version_control_android_2_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [version_control_android_2_stream_cursor_input]!

    """filter the rows returned"""
    where: version_control_android_2_bool_exp
  ): [version_control_android_2!]!

  """
  fetch data from the table: "version_control_ios"
  """
  version_control_ios(
    """distinct select on columns"""
    distinct_on: [version_control_ios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [version_control_ios_order_by!]

    """filter the rows returned"""
    where: version_control_ios_bool_exp
  ): [version_control_ios!]!

  """
  fetch data from the table: "version_control_ios" using primary key columns
  """
  version_control_ios_by_pk(id: Int!): version_control_ios

  """
  fetch data from the table in a streaming manner: "version_control_ios"
  """
  version_control_ios_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [version_control_ios_stream_cursor_input]!

    """filter the rows returned"""
    where: version_control_ios_bool_exp
  ): [version_control_ios!]!

  """
  fetch data from the table: "wallet_info"
  """
  wallet_info(
    """distinct select on columns"""
    distinct_on: [wallet_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [wallet_info_order_by!]

    """filter the rows returned"""
    where: wallet_info_bool_exp
  ): [wallet_info!]!

  """fetch data from the table: "wallet_info" using primary key columns"""
  wallet_info_by_pk(id: Int!): wallet_info

  """
  fetch data from the table in a streaming manner: "wallet_info"
  """
  wallet_info_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [wallet_info_stream_cursor_input]!

    """filter the rows returned"""
    where: wallet_info_bool_exp
  ): [wallet_info!]!
}

"""
columns and relationships of "system_msg"
"""
type system_msg {
  author: String!
  content: String!
  created_at: timestamp
  deleted: Boolean!
  id: Int!
  share_content: String
  title: String!
  updated_at: timestamp
}

"""
Boolean expression to filter rows from the table "system_msg". All fields are combined with a logical 'AND'.
"""
input system_msg_bool_exp {
  _and: [system_msg_bool_exp!]
  _not: system_msg_bool_exp
  _or: [system_msg_bool_exp!]
  author: String_comparison_exp
  content: String_comparison_exp
  created_at: timestamp_comparison_exp
  deleted: Boolean_comparison_exp
  id: Int_comparison_exp
  share_content: String_comparison_exp
  title: String_comparison_exp
  updated_at: timestamp_comparison_exp
}

"""Ordering options when selecting data from "system_msg"."""
input system_msg_order_by {
  author: order_by
  content: order_by
  created_at: order_by
  deleted: order_by
  id: order_by
  share_content: order_by
  title: order_by
  updated_at: order_by
}

"""
select columns of table "system_msg"
"""
enum system_msg_select_column {
  """column name"""
  author

  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  deleted

  """column name"""
  id

  """column name"""
  share_content

  """column name"""
  title

  """column name"""
  updated_at
}

"""
Streaming cursor of the table "system_msg"
"""
input system_msg_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: system_msg_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input system_msg_stream_cursor_value_input {
  author: String
  content: String
  created_at: timestamp
  deleted: Boolean
  id: Int
  share_content: String
  title: String
  updated_at: timestamp
}

"""
columns and relationships of "system_msg_test"
"""
type system_msg_test {
  author: String!
  content: String!
  created_at: timestamp
  deleted: Boolean!
  id: Int!
  share_content: String
  title: String!
  updated_at: timestamp
}

"""
Boolean expression to filter rows from the table "system_msg_test". All fields are combined with a logical 'AND'.
"""
input system_msg_test_bool_exp {
  _and: [system_msg_test_bool_exp!]
  _not: system_msg_test_bool_exp
  _or: [system_msg_test_bool_exp!]
  author: String_comparison_exp
  content: String_comparison_exp
  created_at: timestamp_comparison_exp
  deleted: Boolean_comparison_exp
  id: Int_comparison_exp
  share_content: String_comparison_exp
  title: String_comparison_exp
  updated_at: timestamp_comparison_exp
}

"""Ordering options when selecting data from "system_msg_test"."""
input system_msg_test_order_by {
  author: order_by
  content: order_by
  created_at: order_by
  deleted: order_by
  id: order_by
  share_content: order_by
  title: order_by
  updated_at: order_by
}

"""
select columns of table "system_msg_test"
"""
enum system_msg_test_select_column {
  """column name"""
  author

  """column name"""
  content

  """column name"""
  created_at

  """column name"""
  deleted

  """column name"""
  id

  """column name"""
  share_content

  """column name"""
  title

  """column name"""
  updated_at
}

"""
Streaming cursor of the table "system_msg_test"
"""
input system_msg_test_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: system_msg_test_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input system_msg_test_stream_cursor_value_input {
  author: String
  content: String
  created_at: timestamp
  deleted: Boolean
  id: Int
  share_content: String
  title: String
  updated_at: timestamp
}

scalar timestamp

"""
Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
  _eq: timestamp
  _gt: timestamp
  _gte: timestamp
  _in: [timestamp!]
  _is_null: Boolean
  _lt: timestamp
  _lte: timestamp
  _neq: timestamp
  _nin: [timestamp!]
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "token_in_dapps"
"""
type token_in_dapps {
  chainId: Int!
  created_at: timestamptz!
  dapp: Int

  """An array relationship"""
  dapps(
    """distinct select on columns"""
    distinct_on: [dapp_list_latest_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dapp_list_latest_order_by!]

    """filter the rows returned"""
    where: dapp_list_latest_bool_exp
  ): [dapp_list_latest!]!
  id: Int!
  token: String!
  updated_at: timestamptz!
}

"""
Boolean expression to filter rows from the table "token_in_dapps". All fields are combined with a logical 'AND'.
"""
input token_in_dapps_bool_exp {
  _and: [token_in_dapps_bool_exp!]
  _not: token_in_dapps_bool_exp
  _or: [token_in_dapps_bool_exp!]
  chainId: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  dapp: Int_comparison_exp
  dapps: dapp_list_latest_bool_exp
  id: Int_comparison_exp
  token: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""Ordering options when selecting data from "token_in_dapps"."""
input token_in_dapps_order_by {
  chainId: order_by
  created_at: order_by
  dapp: order_by
  dapps_aggregate: dapp_list_latest_aggregate_order_by
  id: order_by
  token: order_by
  updated_at: order_by
}

"""
select columns of table "token_in_dapps"
"""
enum token_in_dapps_select_column {
  """column name"""
  chainId

  """column name"""
  created_at

  """column name"""
  dapp

  """column name"""
  id

  """column name"""
  token

  """column name"""
  updated_at
}

"""
Streaming cursor of the table "token_in_dapps"
"""
input token_in_dapps_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: token_in_dapps_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input token_in_dapps_stream_cursor_value_input {
  chainId: Int
  created_at: timestamptz
  dapp: Int
  id: Int
  token: String
  updated_at: timestamptz
}

"""
columns and relationships of "token_list"
"""
type token_list {
  decimal(
    """JSON select path"""
    path: String
  ): jsonb
  decimals: numeric
  id: String!
  is_depin_token: Boolean
  is_official: Boolean
  logo: String
  metas(
    """JSON select path"""
    path: String
  ): jsonb
  name: String!
  platforms(
    """JSON select path"""
    path: String
  ): jsonb
  symbol: String!
  tags: [String!]
  weight: Int
}

"""
Boolean expression to filter rows from the table "token_list". All fields are combined with a logical 'AND'.
"""
input token_list_bool_exp {
  _and: [token_list_bool_exp!]
  _not: token_list_bool_exp
  _or: [token_list_bool_exp!]
  decimal: jsonb_comparison_exp
  decimals: numeric_comparison_exp
  id: String_comparison_exp
  is_depin_token: Boolean_comparison_exp
  is_official: Boolean_comparison_exp
  logo: String_comparison_exp
  metas: jsonb_comparison_exp
  name: String_comparison_exp
  platforms: jsonb_comparison_exp
  symbol: String_comparison_exp
  tags: String_array_comparison_exp
  weight: Int_comparison_exp
}

"""Ordering options when selecting data from "token_list"."""
input token_list_order_by {
  decimal: order_by
  decimals: order_by
  id: order_by
  is_depin_token: order_by
  is_official: order_by
  logo: order_by
  metas: order_by
  name: order_by
  platforms: order_by
  symbol: order_by
  tags: order_by
  weight: order_by
}

"""
select columns of table "token_list"
"""
enum token_list_select_column {
  """column name"""
  decimal

  """column name"""
  decimals

  """column name"""
  id

  """column name"""
  is_depin_token

  """column name"""
  is_official

  """column name"""
  logo

  """column name"""
  metas

  """column name"""
  name

  """column name"""
  platforms

  """column name"""
  symbol

  """column name"""
  tags

  """column name"""
  weight
}

"""
Streaming cursor of the table "token_list"
"""
input token_list_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: token_list_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input token_list_stream_cursor_value_input {
  decimal: jsonb
  decimals: numeric
  id: String
  is_depin_token: Boolean
  is_official: Boolean
  logo: String
  metas: jsonb
  name: String
  platforms: jsonb
  symbol: String
  tags: [String!]
  weight: Int
}

"""
columns and relationships of "token_list_v2"
"""
type token_list_v2 {
  current_price: numeric
  decimals: numeric
  id: String
  logo: String
  market_cap: numeric
  name: String
  platforms(
    """JSON select path"""
    path: String
  ): jsonb
  symbol: String
}

"""
Boolean expression to filter rows from the table "token_list_v2". All fields are combined with a logical 'AND'.
"""
input token_list_v2_bool_exp {
  _and: [token_list_v2_bool_exp!]
  _not: token_list_v2_bool_exp
  _or: [token_list_v2_bool_exp!]
  current_price: numeric_comparison_exp
  decimals: numeric_comparison_exp
  id: String_comparison_exp
  logo: String_comparison_exp
  market_cap: numeric_comparison_exp
  name: String_comparison_exp
  platforms: jsonb_comparison_exp
  symbol: String_comparison_exp
}

"""Ordering options when selecting data from "token_list_v2"."""
input token_list_v2_order_by {
  current_price: order_by
  decimals: order_by
  id: order_by
  logo: order_by
  market_cap: order_by
  name: order_by
  platforms: order_by
  symbol: order_by
}

"""
select columns of table "token_list_v2"
"""
enum token_list_v2_select_column {
  """column name"""
  current_price

  """column name"""
  decimals

  """column name"""
  id

  """column name"""
  logo

  """column name"""
  market_cap

  """column name"""
  name

  """column name"""
  platforms

  """column name"""
  symbol
}

"""
Streaming cursor of the table "token_list_v2"
"""
input token_list_v2_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: token_list_v2_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input token_list_v2_stream_cursor_value_input {
  current_price: numeric
  decimals: numeric
  id: String
  logo: String
  market_cap: numeric
  name: String
  platforms: jsonb
  symbol: String
}

"""
columns and relationships of "token_list_v3"
"""
type token_list_v3 {
  current_price: numeric
  decimals(
    """JSON select path"""
    path: String
  ): jsonb
  id: String
  is_depin_token: Boolean
  is_official: Boolean
  logo: String
  market_cap: numeric
  name: String
  platforms(
    """JSON select path"""
    path: String
  ): jsonb
  symbol: String
  tags: [String!]
  website: String
  weight: Int
}

"""
aggregated selection of "token_list_v3"
"""
type token_list_v3_aggregate {
  aggregate: token_list_v3_aggregate_fields
  nodes: [token_list_v3!]!
}

"""
aggregate fields of "token_list_v3"
"""
type token_list_v3_aggregate_fields {
  avg: token_list_v3_avg_fields
  count(columns: [token_list_v3_select_column!], distinct: Boolean): Int!
  max: token_list_v3_max_fields
  min: token_list_v3_min_fields
  stddev: token_list_v3_stddev_fields
  stddev_pop: token_list_v3_stddev_pop_fields
  stddev_samp: token_list_v3_stddev_samp_fields
  sum: token_list_v3_sum_fields
  var_pop: token_list_v3_var_pop_fields
  var_samp: token_list_v3_var_samp_fields
  variance: token_list_v3_variance_fields
}

"""aggregate avg on columns"""
type token_list_v3_avg_fields {
  current_price: Float
  market_cap: Float
  weight: Float
}

"""
Boolean expression to filter rows from the table "token_list_v3". All fields are combined with a logical 'AND'.
"""
input token_list_v3_bool_exp {
  _and: [token_list_v3_bool_exp!]
  _not: token_list_v3_bool_exp
  _or: [token_list_v3_bool_exp!]
  current_price: numeric_comparison_exp
  decimals: jsonb_comparison_exp
  id: String_comparison_exp
  is_depin_token: Boolean_comparison_exp
  is_official: Boolean_comparison_exp
  logo: String_comparison_exp
  market_cap: numeric_comparison_exp
  name: String_comparison_exp
  platforms: jsonb_comparison_exp
  symbol: String_comparison_exp
  tags: String_array_comparison_exp
  website: String_comparison_exp
  weight: Int_comparison_exp
}

"""aggregate max on columns"""
type token_list_v3_max_fields {
  current_price: numeric
  id: String
  logo: String
  market_cap: numeric
  name: String
  symbol: String
  tags: [String!]
  website: String
  weight: Int
}

"""aggregate min on columns"""
type token_list_v3_min_fields {
  current_price: numeric
  id: String
  logo: String
  market_cap: numeric
  name: String
  symbol: String
  tags: [String!]
  website: String
  weight: Int
}

"""Ordering options when selecting data from "token_list_v3"."""
input token_list_v3_order_by {
  current_price: order_by
  decimals: order_by
  id: order_by
  is_depin_token: order_by
  is_official: order_by
  logo: order_by
  market_cap: order_by
  name: order_by
  platforms: order_by
  symbol: order_by
  tags: order_by
  website: order_by
  weight: order_by
}

"""
select columns of table "token_list_v3"
"""
enum token_list_v3_select_column {
  """column name"""
  current_price

  """column name"""
  decimals

  """column name"""
  id

  """column name"""
  is_depin_token

  """column name"""
  is_official

  """column name"""
  logo

  """column name"""
  market_cap

  """column name"""
  name

  """column name"""
  platforms

  """column name"""
  symbol

  """column name"""
  tags

  """column name"""
  website

  """column name"""
  weight
}

"""aggregate stddev on columns"""
type token_list_v3_stddev_fields {
  current_price: Float
  market_cap: Float
  weight: Float
}

"""aggregate stddev_pop on columns"""
type token_list_v3_stddev_pop_fields {
  current_price: Float
  market_cap: Float
  weight: Float
}

"""aggregate stddev_samp on columns"""
type token_list_v3_stddev_samp_fields {
  current_price: Float
  market_cap: Float
  weight: Float
}

"""
Streaming cursor of the table "token_list_v3"
"""
input token_list_v3_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: token_list_v3_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input token_list_v3_stream_cursor_value_input {
  current_price: numeric
  decimals: jsonb
  id: String
  is_depin_token: Boolean
  is_official: Boolean
  logo: String
  market_cap: numeric
  name: String
  platforms: jsonb
  symbol: String
  tags: [String!]
  website: String
  weight: Int
}

"""aggregate sum on columns"""
type token_list_v3_sum_fields {
  current_price: numeric
  market_cap: numeric
  weight: Int
}

"""aggregate var_pop on columns"""
type token_list_v3_var_pop_fields {
  current_price: Float
  market_cap: Float
  weight: Float
}

"""aggregate var_samp on columns"""
type token_list_v3_var_samp_fields {
  current_price: Float
  market_cap: Float
  weight: Float
}

"""aggregate variance on columns"""
type token_list_v3_variance_fields {
  current_price: Float
  market_cap: Float
  weight: Float
}

"""
columns and relationships of "token_list_v4"
"""
type token_list_v4 {
  current_price: numeric
  daily_volume_usd: numeric
  decimals(
    """JSON select path"""
    path: String
  ): jsonb
  id: String
  is_depin_token: Boolean
  is_official: Boolean
  logo: String
  market_cap: numeric
  name: String
  platforms(
    """JSON select path"""
    path: String
  ): jsonb
  price_change_24h: numeric
  rank_point: numeric
  sparkline_in_7d(
    """JSON select path"""
    path: String
  ): jsonb
  symbol: String
  tags: [String!]
  total_liquidity_usd: numeric
  website: String
  weight: Int
}

"""
Boolean expression to filter rows from the table "token_list_v4". All fields are combined with a logical 'AND'.
"""
input token_list_v4_bool_exp {
  _and: [token_list_v4_bool_exp!]
  _not: token_list_v4_bool_exp
  _or: [token_list_v4_bool_exp!]
  current_price: numeric_comparison_exp
  daily_volume_usd: numeric_comparison_exp
  decimals: jsonb_comparison_exp
  id: String_comparison_exp
  is_depin_token: Boolean_comparison_exp
  is_official: Boolean_comparison_exp
  logo: String_comparison_exp
  market_cap: numeric_comparison_exp
  name: String_comparison_exp
  platforms: jsonb_comparison_exp
  price_change_24h: numeric_comparison_exp
  rank_point: numeric_comparison_exp
  sparkline_in_7d: jsonb_comparison_exp
  symbol: String_comparison_exp
  tags: String_array_comparison_exp
  total_liquidity_usd: numeric_comparison_exp
  website: String_comparison_exp
  weight: Int_comparison_exp
}

"""Ordering options when selecting data from "token_list_v4"."""
input token_list_v4_order_by {
  current_price: order_by
  daily_volume_usd: order_by
  decimals: order_by
  id: order_by
  is_depin_token: order_by
  is_official: order_by
  logo: order_by
  market_cap: order_by
  name: order_by
  platforms: order_by
  price_change_24h: order_by
  rank_point: order_by
  sparkline_in_7d: order_by
  symbol: order_by
  tags: order_by
  total_liquidity_usd: order_by
  website: order_by
  weight: order_by
}

"""
select columns of table "token_list_v4"
"""
enum token_list_v4_select_column {
  """column name"""
  current_price

  """column name"""
  daily_volume_usd

  """column name"""
  decimals

  """column name"""
  id

  """column name"""
  is_depin_token

  """column name"""
  is_official

  """column name"""
  logo

  """column name"""
  market_cap

  """column name"""
  name

  """column name"""
  platforms

  """column name"""
  price_change_24h

  """column name"""
  rank_point

  """column name"""
  sparkline_in_7d

  """column name"""
  symbol

  """column name"""
  tags

  """column name"""
  total_liquidity_usd

  """column name"""
  website

  """column name"""
  weight
}

"""
Streaming cursor of the table "token_list_v4"
"""
input token_list_v4_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: token_list_v4_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input token_list_v4_stream_cursor_value_input {
  current_price: numeric
  daily_volume_usd: numeric
  decimals: jsonb
  id: String
  is_depin_token: Boolean
  is_official: Boolean
  logo: String
  market_cap: numeric
  name: String
  platforms: jsonb
  price_change_24h: numeric
  rank_point: numeric
  sparkline_in_7d: jsonb
  symbol: String
  tags: [String!]
  total_liquidity_usd: numeric
  website: String
  weight: Int
}

"""
columns and relationships of "token_risk"
"""
type token_risk {
  address: String!
  chainShortName: String!
  created_at: timestamptz
  riskLevel: Int!
  riskStatus: String!
  source: String!
  tokenFullName: String
  updated_at: timestamptz
}

"""
Boolean expression to filter rows from the table "token_risk". All fields are combined with a logical 'AND'.
"""
input token_risk_bool_exp {
  _and: [token_risk_bool_exp!]
  _not: token_risk_bool_exp
  _or: [token_risk_bool_exp!]
  address: String_comparison_exp
  chainShortName: String_comparison_exp
  created_at: timestamptz_comparison_exp
  riskLevel: Int_comparison_exp
  riskStatus: String_comparison_exp
  source: String_comparison_exp
  tokenFullName: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""Ordering options when selecting data from "token_risk"."""
input token_risk_order_by {
  address: order_by
  chainShortName: order_by
  created_at: order_by
  riskLevel: order_by
  riskStatus: order_by
  source: order_by
  tokenFullName: order_by
  updated_at: order_by
}

"""
select columns of table "token_risk"
"""
enum token_risk_select_column {
  """column name"""
  address

  """column name"""
  chainShortName

  """column name"""
  created_at

  """column name"""
  riskLevel

  """column name"""
  riskStatus

  """column name"""
  source

  """column name"""
  tokenFullName

  """column name"""
  updated_at
}

"""
Streaming cursor of the table "token_risk"
"""
input token_risk_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: token_risk_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input token_risk_stream_cursor_value_input {
  address: String
  chainShortName: String
  created_at: timestamptz
  riskLevel: Int
  riskStatus: String
  source: String
  tokenFullName: String
  updated_at: timestamptz
}

"""
columns and relationships of "version_control_android_2"
"""
type version_control_android_2 {
  forced_code: Int!
  id: bigint!
  log: String!
  log_cn: String!
  target_version_code: Int!
  upgrade_content_cn: String
  upgrade_content_en: String
  url: String!
  version_code: Int!
  version_name: String!
}

"""
Boolean expression to filter rows from the table "version_control_android_2". All fields are combined with a logical 'AND'.
"""
input version_control_android_2_bool_exp {
  _and: [version_control_android_2_bool_exp!]
  _not: version_control_android_2_bool_exp
  _or: [version_control_android_2_bool_exp!]
  forced_code: Int_comparison_exp
  id: bigint_comparison_exp
  log: String_comparison_exp
  log_cn: String_comparison_exp
  target_version_code: Int_comparison_exp
  upgrade_content_cn: String_comparison_exp
  upgrade_content_en: String_comparison_exp
  url: String_comparison_exp
  version_code: Int_comparison_exp
  version_name: String_comparison_exp
}

"""Ordering options when selecting data from "version_control_android_2"."""
input version_control_android_2_order_by {
  forced_code: order_by
  id: order_by
  log: order_by
  log_cn: order_by
  target_version_code: order_by
  upgrade_content_cn: order_by
  upgrade_content_en: order_by
  url: order_by
  version_code: order_by
  version_name: order_by
}

"""
select columns of table "version_control_android_2"
"""
enum version_control_android_2_select_column {
  """column name"""
  forced_code

  """column name"""
  id

  """column name"""
  log

  """column name"""
  log_cn

  """column name"""
  target_version_code

  """column name"""
  upgrade_content_cn

  """column name"""
  upgrade_content_en

  """column name"""
  url

  """column name"""
  version_code

  """column name"""
  version_name
}

"""
Streaming cursor of the table "version_control_android_2"
"""
input version_control_android_2_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: version_control_android_2_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input version_control_android_2_stream_cursor_value_input {
  forced_code: Int
  id: bigint
  log: String
  log_cn: String
  target_version_code: Int
  upgrade_content_cn: String
  upgrade_content_en: String
  url: String
  version_code: Int
  version_name: String
}

"""
columns and relationships of "version_control_ios"
"""
type version_control_ios {
  content: String!
  forced_version: String!
  hide_buy_version: String!
  id: Int!
  url: String!
  version: String!
}

"""
Boolean expression to filter rows from the table "version_control_ios". All fields are combined with a logical 'AND'.
"""
input version_control_ios_bool_exp {
  _and: [version_control_ios_bool_exp!]
  _not: version_control_ios_bool_exp
  _or: [version_control_ios_bool_exp!]
  content: String_comparison_exp
  forced_version: String_comparison_exp
  hide_buy_version: String_comparison_exp
  id: Int_comparison_exp
  url: String_comparison_exp
  version: String_comparison_exp
}

"""Ordering options when selecting data from "version_control_ios"."""
input version_control_ios_order_by {
  content: order_by
  forced_version: order_by
  hide_buy_version: order_by
  id: order_by
  url: order_by
  version: order_by
}

"""
select columns of table "version_control_ios"
"""
enum version_control_ios_select_column {
  """column name"""
  content

  """column name"""
  forced_version

  """column name"""
  hide_buy_version

  """column name"""
  id

  """column name"""
  url

  """column name"""
  version
}

"""
Streaming cursor of the table "version_control_ios"
"""
input version_control_ios_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: version_control_ios_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input version_control_ios_stream_cursor_value_input {
  content: String
  forced_version: String
  hide_buy_version: String
  id: Int
  url: String
  version: String
}

"""
columns and relationships of "wallet_info"
"""
type wallet_info {
  address: String!
  ads: String
  balance: String!
  chainId: Int!
  created_at: timestamptz!
  id: Int!
  platform: String
  updated_at: timestamptz!
}

"""
Boolean expression to filter rows from the table "wallet_info". All fields are combined with a logical 'AND'.
"""
input wallet_info_bool_exp {
  _and: [wallet_info_bool_exp!]
  _not: wallet_info_bool_exp
  _or: [wallet_info_bool_exp!]
  address: String_comparison_exp
  ads: String_comparison_exp
  balance: String_comparison_exp
  chainId: Int_comparison_exp
  created_at: timestamptz_comparison_exp
  id: Int_comparison_exp
  platform: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "wallet_info"
"""
enum wallet_info_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  wallet_info_pkey
}

"""
input type for inserting data into table "wallet_info"
"""
input wallet_info_insert_input {
  address: String
  ads: String
  balance: String
  chainId: Int
  created_at: timestamptz
  id: Int
  platform: String
  updated_at: timestamptz
}

"""
response of any mutation on the table "wallet_info"
"""
type wallet_info_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [wallet_info!]!
}

"""
on_conflict condition type for table "wallet_info"
"""
input wallet_info_on_conflict {
  constraint: wallet_info_constraint!
  update_columns: [wallet_info_update_column!]! = []
  where: wallet_info_bool_exp
}

"""Ordering options when selecting data from "wallet_info"."""
input wallet_info_order_by {
  address: order_by
  ads: order_by
  balance: order_by
  chainId: order_by
  created_at: order_by
  id: order_by
  platform: order_by
  updated_at: order_by
}

"""primary key columns input for table: wallet_info"""
input wallet_info_pk_columns_input {
  id: Int!
}

"""
select columns of table "wallet_info"
"""
enum wallet_info_select_column {
  """column name"""
  address

  """column name"""
  ads

  """column name"""
  balance

  """column name"""
  chainId

  """column name"""
  created_at

  """column name"""
  id

  """column name"""
  platform

  """column name"""
  updated_at
}

"""
input type for updating data in table "wallet_info"
"""
input wallet_info_set_input {
  balance: String
  updated_at: timestamptz
}

"""
Streaming cursor of the table "wallet_info"
"""
input wallet_info_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: wallet_info_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input wallet_info_stream_cursor_value_input {
  address: String
  ads: String
  balance: String
  chainId: Int
  created_at: timestamptz
  id: Int
  platform: String
  updated_at: timestamptz
}

"""
update columns of table "wallet_info"
"""
enum wallet_info_update_column {
  """column name"""
  balance

  """column name"""
  updated_at
}

input wallet_info_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: wallet_info_set_input

  """filter the rows which have to be updated"""
  where: wallet_info_bool_exp!
}